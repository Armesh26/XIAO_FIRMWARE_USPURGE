{"ast":null,"code":"import { AbstractClient } from \"./AbstractClient\";\nimport { SpeakLiveClient } from \"./SpeakLiveClient\";\nimport { SpeakRestClient } from \"./SpeakRestClient\";\n/**\n * The `SpeakClient` class extends the `AbstractClient` class and provides access to the \"speak\" namespace.\n * It exposes two methods:\n *\n * 1. `request()`: Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n * 2. `live(ttsOptions: SpeakSchema = {}, endpoint = \":version/speak\")`: Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n */\nexport class SpeakClient extends AbstractClient {\n  constructor() {\n    super(...arguments);\n    this.namespace = \"speak\";\n  }\n  /**\n   * Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n   */\n  request(source, options) {\n    let endpoint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \":version/speak\";\n    const client = new SpeakRestClient(this.options);\n    return client.request(source, options, endpoint);\n  }\n  /**\n   * Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n   * @param {SpeakSchema} [ttsOptions={}] - The TTS options to use for the live speak API.\n   * @param {string} [endpoint=\":version/speak\"] - The endpoint to use for the live speak API.\n   * @returns {SpeakLiveClient} - A `SpeakLiveClient` instance for interacting with the live speak API.\n   */\n  live() {\n    let ttsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let endpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \":version/speak\";\n    return new SpeakLiveClient(this.options, ttsOptions, endpoint);\n  }\n}","map":{"version":3,"names":["AbstractClient","SpeakLiveClient","SpeakRestClient","SpeakClient","constructor","namespace","request","source","options","endpoint","arguments","length","undefined","client","live","ttsOptions"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@deepgram/sdk/src/packages/SpeakClient.ts"],"sourcesContent":["import { AbstractClient } from \"./AbstractClient\";\nimport { SpeakLiveClient } from \"./SpeakLiveClient\";\nimport { SpeakRestClient } from \"./SpeakRestClient\";\nimport { SpeakSchema } from \"../lib/types\";\nimport { TextSource } from \"../lib/types\";\n\n/**\n * The `SpeakClient` class extends the `AbstractClient` class and provides access to the \"speak\" namespace.\n * It exposes two methods:\n *\n * 1. `request()`: Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n * 2. `live(ttsOptions: SpeakSchema = {}, endpoint = \":version/speak\")`: Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n */\nexport class SpeakClient extends AbstractClient {\n  public namespace: string = \"speak\";\n\n  /**\n   * Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n   */\n  public request(source: TextSource, options?: SpeakSchema, endpoint = \":version/speak\") {\n    const client = new SpeakRestClient(this.options);\n\n    return client.request(source, options, endpoint);\n  }\n\n  /**\n   * Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n   * @param {SpeakSchema} [ttsOptions={}] - The TTS options to use for the live speak API.\n   * @param {string} [endpoint=\":version/speak\"] - The endpoint to use for the live speak API.\n   * @returns {SpeakLiveClient} - A `SpeakLiveClient` instance for interacting with the live speak API.\n   */\n  public live(ttsOptions: SpeakSchema = {}, endpoint: string = \":version/speak\"): SpeakLiveClient {\n    return new SpeakLiveClient(this.options, ttsOptions, endpoint);\n  }\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AAInD;;;;;;;AAOA,OAAM,MAAOC,WAAY,SAAQH,cAAc;EAA/CI,YAAA;;IACS,KAAAC,SAAS,GAAW,OAAO;EAoBpC;EAlBE;;;EAGOC,OAAOA,CAACC,MAAkB,EAAEC,OAAqB,EAA6B;IAAA,IAA3BC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,gBAAgB;IACnF,MAAMG,MAAM,GAAG,IAAIX,eAAe,CAAC,IAAI,CAACM,OAAO,CAAC;IAEhD,OAAOK,MAAM,CAACP,OAAO,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EAClD;EAEA;;;;;;EAMOK,IAAIA,CAAA,EAAkE;IAAA,IAAjEC,UAAA,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA0B,EAAE;IAAA,IAAED,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmB,gBAAgB;IAC3E,OAAO,IAAIT,eAAe,CAAC,IAAI,CAACO,OAAO,EAAEO,UAAU,EAAEN,QAAQ,CAAC;EAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}