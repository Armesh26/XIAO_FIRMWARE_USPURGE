{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@deepgram/sdk/src/lib/types/AgentLiveSchema.ts"],"sourcesContent":["type AudioEncoding =\n  | \"linear16\"\n  | \"flac\"\n  | \"mulaw\"\n  | \"amr-nb\"\n  | \"amr-wb\"\n  | \"Opus\"\n  | \"speex\"\n  | \"g729\"\n  | string;\n\ntype ListenModel =\n  | \"nova-3\"\n  | \"nova-3-general\"\n  | \"nova-3-medical\"\n  | \"nova-2\"\n  | \"nova-2-meeting\"\n  | \"nova-2-phonecall\"\n  | \"nova-2-voicemail\"\n  | \"nova-2-finance\"\n  | \"nova-2-conversational\"\n  | \"nova-2-video\"\n  | \"nova-2-medical\"\n  | \"nova-2-drivethru\"\n  | \"nova-2-automotive\"\n  | \"nova-2-atc\"\n  | \"nova\"\n  | \"nova-phonecall\"\n  | \"enhanced\"\n  | \"enhanced-meeting\"\n  | \"enhanced-phonecall\"\n  | \"enhanced-finance\"\n  | \"base\"\n  | \"base-meeting\"\n  | \"base-phonecall\"\n  | \"base-voicemail\"\n  | \"base-finance\"\n  | \"base-conversational\"\n  | \"base-video\"\n  | \"whisper-tiny\"\n  | \"whisper\"\n  | \"whisper-small\"\n  | \"whisper-medium\"\n  | \"whisper-large\"\n  | string;\n\ntype SpeakModel =\n  | \"aura-asteria-en\"\n  | \"aura-luna-en\"\n  | \"aura-stella-en\"\n  | \"aura-athena-en\"\n  | \"aura-hera-en\"\n  | \"aura-orion-en\"\n  | \"aura-arcas-en\"\n  | \"aura-perseus-en\"\n  | \"aura-angus-en\"\n  | \"aura-orpheus-en\"\n  | \"aura-helios-en\"\n  | \"aura-zeus-en\"\n  | string;\n\n/**\n * @see https://developers.deepgram.com/reference/voicebot-api-phase-preview#settingsconfiguration\n */\ninterface AgentLiveSchema extends Record<string, unknown> {\n  /**\n   * Set to true to enable experimental features.\n   * @default false\n   */\n  experimental?: boolean;\n  audio: {\n    input?: {\n      /**\n       * @default \"linear16\"\n       */\n      encoding: AudioEncoding;\n      /**\n       * @default 16000\n       */\n      sample_rate: number;\n    };\n    /**\n     * @see https://developers.deepgram.com/docs/tts-media-output-settings#audio-format-combinations\n     */\n    output?: {\n      encoding?: string;\n      sample_rate?: number;\n      bitrate?: number;\n      /**\n       * @default \"none\"\n       */\n      container?: string;\n    };\n  };\n  agent: {\n    language?: {\n      /**\n       * ISO 639-1 language code for agent language.\n       * @default \"en\"\n       */\n      type: string;\n    };\n    listen?: {\n      provider: {\n        type: \"deepgram\";\n        /**\n         * @see https://developers.deepgram.com/docs/model\n         */\n        model: ListenModel;\n        /**\n         * Only available for Nova 3.\n         * @see https://developers.deepgram.com/docs/keyterm\n         */\n        keyterms?: string[];\n      };\n    };\n    speak?: {\n      provider: {\n        type: \"deepgram\" | \"eleven_labs\" | \"cartesia\" | \"open_ai\" | string;\n        /**\n         * Deepgram OR OpenAI model to use.\n         */\n        model?: SpeakModel;\n        /**\n         * Eleven Labs OR Cartesia model to use.\n         */\n        model_id?: string;\n        /**\n         * Cartesia voice configuration.\n         */\n        voice?: {\n          mode: string;\n          id: string;\n        };\n        /**\n         * Optional Cartesia language.\n         */\n        language?: string;\n        /**\n         * Optional Eleven Labs voice.\n         */\n        language_code?: string;\n      };\n      endpoint?: {\n        url: string;\n        headers?: Record<string, string>;\n      };\n    };\n    /**\n     * @see https://developers.deepgram.com/reference/voicebot-api-phase-preview#supported-llm-providers-and-models\n     */\n    think?: {\n      provider: {\n        type: \"deepgram\" | \"open_ai\" | \"anthropic\" | \"x_ai\" | string;\n        model: string;\n        /**\n         * 0-2 for OpenAI, 0-1 for Anthropic.\n         */\n        temperature?: number;\n      };\n      /**\n       * Optional ONLY if LLM provider is OpenAI or Anthropic.\n       */\n      endpoint?: {\n        url: string;\n        headers?: Record<string, string>;\n      };\n      functions?: {\n        name?: string;\n        description?: string;\n        parameters?: Record<string, unknown>;\n        endpoint?: {\n          url?: string;\n          method?: string;\n          headers?: Record<string, string>;\n        };\n      }[];\n      prompt?: string;\n    };\n  };\n  /**\n   * Optional message the agent will say at the start of the connection.\n   */\n  greeting?: string;\n}\n\nexport type { AgentLiveSchema, SpeakModel };\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}