{"ast":null,"code":"var _jsxFileName = \"/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/DeepgramTranscriber.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FileText, Mic, MicOff, Copy, Trash2 } from 'lucide-react';\nimport { deepgramService } from '../services/DeepgramService';\nimport { audioProcessor } from '../utils/AudioProcessor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n_c = Container;\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n_c2 = Title;\nconst Button = styled.button`\n  background: ${props => {\n  if (props.active) return '#e74c3c';\n  if (props.secondary) return '#6c757d';\n  return '#667eea';\n}};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem;\n\n  &:hover {\n    background: ${props => {\n  if (props.active) return '#c0392b';\n  if (props.secondary) return '#5a6268';\n  return '#5a67d8';\n}};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n_c3 = Button;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin: 2rem 0;\n`;\n_c4 = ButtonGroup;\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => {\n  if (props.active) return '#fdf2f2';\n  if (props.error) return '#fdf2f2';\n  return '#f8f9fa';\n}};\n  color: ${props => {\n  if (props.active) return '#e74c3c';\n  if (props.error) return '#e74c3c';\n  return '#666';\n}};\n  font-weight: 500;\n  justify-content: center;\n`;\n_c5 = Status;\nconst TranscriptionBox = styled.div`\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin: 1rem 0;\n  min-height: 200px;\n  max-height: 400px;\n  overflow-y: auto;\n  font-size: 1rem;\n  line-height: 1.6;\n  color: #333;\n  border: 2px solid #e9ecef;\n  transition: border-color 0.3s ease;\n\n  &:focus-within {\n    border-color: #667eea;\n  }\n`;\n_c6 = TranscriptionBox;\nconst TranscriptionText = styled.div`\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin-bottom: 1rem;\n`;\n_c7 = TranscriptionText;\nconst LiveText = styled.span`\n  background: rgba(102, 126, 234, 0.1);\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: #667eea;\n  font-weight: 500;\n`;\n_c8 = LiveText;\nconst Controls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e9ecef;\n`;\n_c9 = Controls;\nconst Stats = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  font-family: monospace;\n`;\n_c0 = Stats;\nconst DeepgramTranscriber = ({\n  isConnected,\n  audioData\n}) => {\n  _s();\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [liveText, setLiveText] = useState('');\n  const [isDeepgramConnected, setIsDeepgramConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState({\n    words: 0,\n    characters: 0,\n    duration: 0\n  });\n  const [audioPacketsSent, setAudioPacketsSent] = useState(0);\n  const startTimeRef = useRef(null);\n\n  // Initialize Deepgram service listeners\n  useEffect(() => {\n    deepgramService.setListeners({\n      onTranscript: data => {\n        if (data.isFinal) {\n          setTranscription(prev => prev + data.text + ' ');\n          setLiveText('');\n\n          // Update stats\n          setStats(prev => ({\n            words: prev.words + data.text.split(' ').length,\n            characters: prev.characters + data.text.length,\n            duration: startTimeRef.current ? (Date.now() - startTimeRef.current) / 1000 : 0\n          }));\n        } else {\n          setLiveText(data.text);\n        }\n      },\n      onError: error => {\n        console.error('❌ Deepgram error:', error);\n        setError(error.message || 'Transcription error');\n        setIsTranscribing(false);\n        setIsDeepgramConnected(false);\n      },\n      onOpen: () => {\n        console.log('✅ Deepgram connected');\n        setIsDeepgramConnected(true);\n        setError(null);\n      },\n      onClose: () => {\n        console.log('🔌 Deepgram disconnected');\n        setIsDeepgramConnected(false);\n        setIsTranscribing(false);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      deepgramService.cleanup();\n    };\n  }, []);\n\n  // Handle audio data processing\n  useEffect(() => {\n    if (audioData && isTranscribing && isDeepgramConnected) {\n      try {\n        // Process audio data through audio processor\n        const processedChunk = audioProcessor.processAudioData(audioData);\n        if (processedChunk) {\n          // Convert to format Deepgram expects\n          const deepgramData = audioProcessor.convertForDeepgram(processedChunk);\n\n          // Send to Deepgram\n          const success = deepgramService.sendAudioData(deepgramData);\n          if (success) {\n            setAudioPacketsSent(prev => prev + 1);\n\n            // Log every 50 packets\n            if (audioPacketsSent % 50 === 0) {\n              console.log(`🎵 Sent ${processedChunk.length} samples to Deepgram (packet ${audioPacketsSent + 1})`);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error processing audio data:', error);\n        setError('Failed to process audio data: ' + error.message);\n      }\n    }\n  }, [audioData, isTranscribing, isDeepgramConnected, audioPacketsSent]);\n  const startTranscription = useCallback(async () => {\n    if (!isConnected) {\n      alert('Please connect to XIAO board first');\n      return;\n    }\n    try {\n      console.log('🎯 Starting Deepgram transcription...');\n      const success = await deepgramService.startTranscription();\n      if (success) {\n        setIsTranscribing(true);\n        setTranscription('');\n        setLiveText('');\n        setError(null);\n        setAudioPacketsSent(0);\n        startTimeRef.current = Date.now();\n\n        // Reset audio processor\n        audioProcessor.reset();\n        console.log('✅ Transcription started successfully');\n      } else {\n        setError('Failed to start Deepgram transcription');\n      }\n    } catch (err) {\n      console.error('❌ Failed to start transcription:', err);\n      setError(err.message || 'Failed to start transcription');\n    }\n  }, [isConnected]);\n  const stopTranscription = useCallback(() => {\n    try {\n      deepgramService.stopTranscription();\n      setIsTranscribing(false);\n      setIsDeepgramConnected(false);\n      console.log('🛑 Transcription stopped');\n    } catch (err) {\n      console.error('❌ Error stopping transcription:', err);\n      setIsTranscribing(false);\n      setIsDeepgramConnected(false);\n    }\n  }, []);\n  const clearTranscription = useCallback(() => {\n    setTranscription('');\n    setLiveText('');\n    setStats({\n      words: 0,\n      characters: 0,\n      duration: 0\n    });\n  }, []);\n  const copyTranscription = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(transcription.trim());\n      console.log('✅ Transcription copied to clipboard');\n    } catch (err) {\n      console.error('❌ Failed to copy text:', err);\n      alert('Failed to copy text to clipboard');\n    }\n  }, [transcription]);\n  const formatDuration = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uD83C\\uDFAF Deepgram Nova-3 Transcription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      active: isTranscribing,\n      error: error,\n      children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), \"Error: \", error]\n      }, void 0, true), isTranscribing && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Mic, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), isDeepgramConnected ? 'Transcribing XIAO Audio...' : 'Connecting to Deepgram...']\n      }, void 0, true), !isTranscribing && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MicOff, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), \"Ready to Transcribe\"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [!isTranscribing ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startTranscription,\n        disabled: !isConnected,\n        children: [/*#__PURE__*/_jsxDEV(Mic, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), \"Start Transcription\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stopTranscription,\n        active: true,\n        children: [/*#__PURE__*/_jsxDEV(MicOff, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), \"Stop Transcription\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: copyTranscription,\n        disabled: !transcription.trim(),\n        secondary: true,\n        children: [/*#__PURE__*/_jsxDEV(Copy, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), \"Copy Text\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearTranscription,\n        disabled: !transcription.trim(),\n        secondary: true,\n        children: [/*#__PURE__*/_jsxDEV(Trash2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), \"Clear\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TranscriptionBox, {\n      children: /*#__PURE__*/_jsxDEV(TranscriptionText, {\n        children: [transcription, liveText && /*#__PURE__*/_jsxDEV(LiveText, {\n          children: liveText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: /*#__PURE__*/_jsxDEV(Stats, {\n        children: [\"Words: \", stats.words, \" | Characters: \", stats.characters, \" | Duration: \", formatDuration(stats.duration), \" | Audio Packets: \", audioPacketsSent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(DeepgramTranscriber, \"pAvYv1/FOLScik7QNDB76R5i8mQ=\");\n_c1 = DeepgramTranscriber;\nexport default DeepgramTranscriber;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"ButtonGroup\");\n$RefreshReg$(_c5, \"Status\");\n$RefreshReg$(_c6, \"TranscriptionBox\");\n$RefreshReg$(_c7, \"TranscriptionText\");\n$RefreshReg$(_c8, \"LiveText\");\n$RefreshReg$(_c9, \"Controls\");\n$RefreshReg$(_c0, \"Stats\");\n$RefreshReg$(_c1, \"DeepgramTranscriber\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","FileText","Mic","MicOff","Copy","Trash2","deepgramService","audioProcessor","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h2","_c2","Button","button","props","active","secondary","_c3","ButtonGroup","_c4","Status","error","_c5","TranscriptionBox","_c6","TranscriptionText","_c7","LiveText","span","_c8","Controls","_c9","Stats","_c0","DeepgramTranscriber","isConnected","audioData","_s","isTranscribing","setIsTranscribing","transcription","setTranscription","liveText","setLiveText","isDeepgramConnected","setIsDeepgramConnected","setError","stats","setStats","words","characters","duration","audioPacketsSent","setAudioPacketsSent","startTimeRef","setListeners","onTranscript","data","isFinal","prev","text","split","length","current","Date","now","onError","console","message","onOpen","log","onClose","cleanup","processedChunk","processAudioData","deepgramData","convertForDeepgram","success","sendAudioData","startTranscription","alert","reset","err","stopTranscription","clearTranscription","copyTranscription","navigator","clipboard","writeText","trim","formatDuration","seconds","mins","Math","floor","secs","toString","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","disabled","_c1","$RefreshReg$"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/DeepgramTranscriber.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FileText, Mic, MicOff, Copy, Trash2 } from 'lucide-react';\nimport { deepgramService } from '../services/DeepgramService';\nimport { audioProcessor } from '../utils/AudioProcessor';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  background: ${props => {\n    if (props.active) return '#e74c3c';\n    if (props.secondary) return '#6c757d';\n    return '#667eea';\n  }};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem;\n\n  &:hover {\n    background: ${props => {\n      if (props.active) return '#c0392b';\n      if (props.secondary) return '#5a6268';\n      return '#5a67d8';\n    }};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin: 2rem 0;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => {\n    if (props.active) return '#fdf2f2';\n    if (props.error) return '#fdf2f2';\n    return '#f8f9fa';\n  }};\n  color: ${props => {\n    if (props.active) return '#e74c3c';\n    if (props.error) return '#e74c3c';\n    return '#666';\n  }};\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst TranscriptionBox = styled.div`\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin: 1rem 0;\n  min-height: 200px;\n  max-height: 400px;\n  overflow-y: auto;\n  font-size: 1rem;\n  line-height: 1.6;\n  color: #333;\n  border: 2px solid #e9ecef;\n  transition: border-color 0.3s ease;\n\n  &:focus-within {\n    border-color: #667eea;\n  }\n`;\n\nconst TranscriptionText = styled.div`\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin-bottom: 1rem;\n`;\n\nconst LiveText = styled.span`\n  background: rgba(102, 126, 234, 0.1);\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: #667eea;\n  font-weight: 500;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Stats = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  font-family: monospace;\n`;\n\nconst DeepgramTranscriber = ({ isConnected, audioData }) => {\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [liveText, setLiveText] = useState('');\n  const [isDeepgramConnected, setIsDeepgramConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState({ words: 0, characters: 0, duration: 0 });\n  const [audioPacketsSent, setAudioPacketsSent] = useState(0);\n\n  const startTimeRef = useRef(null);\n\n  // Initialize Deepgram service listeners\n  useEffect(() => {\n    deepgramService.setListeners({\n      onTranscript: (data) => {\n        if (data.isFinal) {\n          setTranscription(prev => prev + data.text + ' ');\n          setLiveText('');\n          \n          // Update stats\n          setStats(prev => ({\n            words: prev.words + data.text.split(' ').length,\n            characters: prev.characters + data.text.length,\n            duration: startTimeRef.current ? (Date.now() - startTimeRef.current) / 1000 : 0\n          }));\n        } else {\n          setLiveText(data.text);\n        }\n      },\n      onError: (error) => {\n        console.error('❌ Deepgram error:', error);\n        setError(error.message || 'Transcription error');\n        setIsTranscribing(false);\n        setIsDeepgramConnected(false);\n      },\n      onOpen: () => {\n        console.log('✅ Deepgram connected');\n        setIsDeepgramConnected(true);\n        setError(null);\n      },\n      onClose: () => {\n        console.log('🔌 Deepgram disconnected');\n        setIsDeepgramConnected(false);\n        setIsTranscribing(false);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      deepgramService.cleanup();\n    };\n  }, []);\n\n  // Handle audio data processing\n  useEffect(() => {\n    if (audioData && isTranscribing && isDeepgramConnected) {\n      try {\n        // Process audio data through audio processor\n        const processedChunk = audioProcessor.processAudioData(audioData);\n        \n        if (processedChunk) {\n          // Convert to format Deepgram expects\n          const deepgramData = audioProcessor.convertForDeepgram(processedChunk);\n          \n          // Send to Deepgram\n          const success = deepgramService.sendAudioData(deepgramData);\n          \n          if (success) {\n            setAudioPacketsSent(prev => prev + 1);\n            \n            // Log every 50 packets\n            if (audioPacketsSent % 50 === 0) {\n              console.log(`🎵 Sent ${processedChunk.length} samples to Deepgram (packet ${audioPacketsSent + 1})`);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error processing audio data:', error);\n        setError('Failed to process audio data: ' + error.message);\n      }\n    }\n  }, [audioData, isTranscribing, isDeepgramConnected, audioPacketsSent]);\n\n  const startTranscription = useCallback(async () => {\n    if (!isConnected) {\n      alert('Please connect to XIAO board first');\n      return;\n    }\n\n    try {\n      console.log('🎯 Starting Deepgram transcription...');\n      \n      const success = await deepgramService.startTranscription();\n      \n      if (success) {\n        setIsTranscribing(true);\n        setTranscription('');\n        setLiveText('');\n        setError(null);\n        setAudioPacketsSent(0);\n        startTimeRef.current = Date.now();\n        \n        // Reset audio processor\n        audioProcessor.reset();\n        \n        console.log('✅ Transcription started successfully');\n      } else {\n        setError('Failed to start Deepgram transcription');\n      }\n    } catch (err) {\n      console.error('❌ Failed to start transcription:', err);\n      setError(err.message || 'Failed to start transcription');\n    }\n  }, [isConnected]);\n\n  const stopTranscription = useCallback(() => {\n    try {\n      deepgramService.stopTranscription();\n      setIsTranscribing(false);\n      setIsDeepgramConnected(false);\n      console.log('🛑 Transcription stopped');\n    } catch (err) {\n      console.error('❌ Error stopping transcription:', err);\n      setIsTranscribing(false);\n      setIsDeepgramConnected(false);\n    }\n  }, []);\n\n  const clearTranscription = useCallback(() => {\n    setTranscription('');\n    setLiveText('');\n    setStats({ words: 0, characters: 0, duration: 0 });\n  }, []);\n\n  const copyTranscription = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(transcription.trim());\n      console.log('✅ Transcription copied to clipboard');\n    } catch (err) {\n      console.error('❌ Failed to copy text:', err);\n      alert('Failed to copy text to clipboard');\n    }\n  }, [transcription]);\n\n  const formatDuration = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <Container>\n      <Title>🎯 Deepgram Nova-3 Transcription</Title>\n      \n      <Status active={isTranscribing} error={error}>\n        {error && (\n          <>\n            <FileText size={20} />\n            Error: {error}\n          </>\n        )}\n        {isTranscribing && !error && (\n          <>\n            <Mic size={20} />\n            {isDeepgramConnected ? 'Transcribing XIAO Audio...' : 'Connecting to Deepgram...'}\n          </>\n        )}\n        {!isTranscribing && !error && (\n          <>\n            <MicOff size={20} />\n            Ready to Transcribe\n          </>\n        )}\n      </Status>\n\n      <ButtonGroup>\n        {!isTranscribing ? (\n          <Button onClick={startTranscription} disabled={!isConnected}>\n            <Mic size={20} />\n            Start Transcription\n          </Button>\n        ) : (\n          <Button onClick={stopTranscription} active>\n            <MicOff size={20} />\n            Stop Transcription\n          </Button>\n        )}\n        \n        <Button onClick={copyTranscription} disabled={!transcription.trim()} secondary>\n          <Copy size={20} />\n          Copy Text\n        </Button>\n        \n        <Button onClick={clearTranscription} disabled={!transcription.trim()} secondary>\n          <Trash2 size={20} />\n          Clear\n        </Button>\n      </ButtonGroup>\n\n      <TranscriptionBox>\n        <TranscriptionText>\n          {transcription}\n          {liveText && <LiveText>{liveText}</LiveText>}\n        </TranscriptionText>\n      </TranscriptionBox>\n\n      <Controls>\n        <Stats>\n          Words: {stats.words} | Characters: {stats.characters} | Duration: {formatDuration(stats.duration)} | Audio Packets: {audioPacketsSent}\n        </Stats>\n      </Controls>\n    </Container>\n  );\n};\n\nexport default DeepgramTranscriber;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}