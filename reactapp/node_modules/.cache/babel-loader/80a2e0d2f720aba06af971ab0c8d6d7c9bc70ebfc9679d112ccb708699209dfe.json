{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState,useRef,useCallback,useEffect}from'react';import styled from'styled-components';import{Mic,Square,Play,Pause,Download,List}from'lucide-react';import{Filesystem,Directory}from'@capacitor/filesystem';import{Capacitor}from'@capacitor/core';import{bleAudioDataManager}from'../utils/BleAudioDataManager';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 20px;\\n  padding: 2rem;\\n  margin: 1rem;\\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n\"])));const Title=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n\"])));const Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  padding: 1rem 2rem;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 0.5rem;\\n  min-width: 140px;\\n  justify-content: center;\\n\\n  &:hover {\\n    background: \",\";\\n    transform: translateY(-2px);\\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: none;\\n  }\\n\"])),props=>{if(props.recording)return'#e74c3c';if(props.playing)return'#f39c12';return'#667eea';},props=>{if(props.recording)return'#c0392b';if(props.playing)return'#e67e22';return'#5a67d8';});const ButtonGroup=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  gap: 1rem;\\n  flex-wrap: wrap;\\n  margin: 2rem 0;\\n\"])));const Status=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  border-radius: 12px;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  justify-content: center;\\n\"])),props=>{if(props.recording)return'#fdf2f2';if(props.playing)return'#fef9e7';return'#f8f9fa';},props=>{if(props.recording)return'#e74c3c';if(props.playing)return'#f39c12';return'#666';});const Timer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 2rem;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 1rem 0;\\n  color: #333;\\n\"])));const AudioInfo=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n  padding: 1rem;\\n  background: #f8f9fa;\\n  border-radius: 12px;\\n  font-family: monospace;\\n  font-size: 0.9rem;\\n\"])));const AudioRecorder=_ref=>{let{isConnected,onAudioData,onRecordingComplete,onAudioHandlerRegister,device}=_ref;const[isRecording,setIsRecording]=useState(false);const[isPlaying,setIsPlaying]=useState(false);const[recordedAudio,setRecordedAudio]=useState(null);const[recordingDuration,setRecordingDuration]=useState(0);const[audioData,setAudioData]=useState([]);const[audioStreamActive,setAudioStreamActive]=useState(false);const[packetCount,setPacketCount]=useState(0);const[currentSession,setCurrentSession]=useState(null);const[recordings,setRecordings]=useState([]);const audioBufferRef=useRef([]);const startTimeRef=useRef(null);const timerRef=useRef(null);const audioContextRef=useRef(null);const sourceRef=useRef(null);const audioHandlerRef=useRef(null);const isRecordingRef=useRef(false);const packetCountRef=useRef(0);const currentSessionRef=useRef(null);// Audio configuration (matching auto_pitch_recorder.py)\nconst SAMPLE_RATE=16000;const CHANNELS=1;const SAMPLE_WIDTH=2;useEffect(()=>{if(isRecording){startTimeRef.current=Date.now();timerRef.current=setInterval(()=>{const elapsed=(Date.now()-startTimeRef.current)/1000;setRecordingDuration(elapsed);},100);}else{if(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}}return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[isRecording]);const createAudioBlob=useCallback(audioData=>{// Create WAV file from audio data\nconst buffer=new ArrayBuffer(44+audioData.length*2);const view=new DataView(buffer);// WAV header\nconst writeString=(offset,string)=>{for(let i=0;i<string.length;i++){view.setUint8(offset+i,string.charCodeAt(i));}};writeString(0,'RIFF');view.setUint32(4,36+audioData.length*2,true);writeString(8,'WAVE');writeString(12,'fmt ');view.setUint32(16,16,true);view.setUint16(20,1,true);view.setUint16(22,CHANNELS,true);view.setUint32(24,SAMPLE_RATE,true);view.setUint32(28,SAMPLE_RATE*CHANNELS*SAMPLE_WIDTH,true);view.setUint16(32,CHANNELS*SAMPLE_WIDTH,true);view.setUint16(34,16,true);writeString(36,'data');view.setUint32(40,audioData.length*2,true);// Write audio data\nlet offset=44;for(let i=0;i<audioData.length;i++){view.setInt16(offset,audioData[i],true);offset+=2;}return new Blob([buffer],{type:'audio/wav'});},[]);const startRecording=useCallback(async()=>{if(!isConnected){alert('Please connect to XIAO board first');return;}console.log('🎤 Starting recording...');console.log('🎤 Audio stream active:',audioStreamActive);console.log('🎤 Packets received so far:',packetCount);try{// Start recording session with data manager\nconst deviceId=(device===null||device===void 0?void 0:device.deviceId)||'unknown';const sessionInfo={deviceName:(device===null||device===void 0?void 0:device.name)||'XIAO Board',rssi:(device===null||device===void 0?void 0:device.rssi)||0};const{sessionId,logFile}=await bleAudioDataManager.startRecordingSession(deviceId,sessionInfo);const sessionData={sessionId,logFile};setCurrentSession(sessionData);currentSessionRef.current=sessionData;setIsRecording(true);isRecordingRef.current=true;setAudioData([]);audioBufferRef.current=[];setRecordingDuration(0);startTimeRef.current=Date.now();console.log('✅ Recording started with session:',sessionId);console.log('📝 Log file:',logFile);}catch(error){console.error('❌ Failed to start recording session:',error);alert('Failed to start recording: '+error.message);}},[isConnected,audioStreamActive,packetCount,device]);const stopRecording=useCallback(async()=>{setIsRecording(false);isRecordingRef.current=false;console.log(\"\\uD83D\\uDED1 Stopping recording. Buffer length: \".concat(audioBufferRef.current.length));if(audioBufferRef.current.length>0&&currentSession){try{// Convert audio data to Int16Array\nconst audioArray=new Int16Array(audioBufferRef.current);setAudioData(audioArray);// Save recording using data manager\nconst recordingMetadata={duration:recordingDuration,sampleCount:audioArray.length,deviceId:device===null||device===void 0?void 0:device.deviceId,deviceName:device===null||device===void 0?void 0:device.name};const{fileName,metadataFile,recording}=await bleAudioDataManager.saveAudioRecording(currentSession.sessionId,audioArray,recordingMetadata);// Create audio blob for immediate playback\nconst audioBlob=createAudioBlob(audioArray);setRecordedAudio(audioBlob);// Notify parent component\nif(onRecordingComplete){onRecordingComplete(audioArray);}console.log(\"\\u2705 Recording saved: \".concat(fileName));console.log(\"\\uD83D\\uDCC4 Metadata: \".concat(metadataFile));console.log(\"\\uD83C\\uDFB5 Audio blob created: \".concat(audioBlob.size,\" bytes\"));// Refresh recordings list\nawait loadRecordings();}catch(error){console.error('❌ Failed to save recording:',error);alert('Failed to save recording: '+error.message);}}else{console.log('⚠️ No audio data captured during recording');console.log('⚠️ Buffer length:',audioBufferRef.current.length);console.log('⚠️ Current session:',currentSession);}setCurrentSession(null);currentSessionRef.current=null;},[onRecordingComplete,createAudioBlob,currentSession,recordingDuration,device,loadRecordings]);const playRecording=useCallback(async()=>{if(!recordedAudio)return;try{setIsPlaying(true);// Close existing audio context if any\nif(audioContextRef.current&&audioContextRef.current.state!=='closed'){await audioContextRef.current.close();}// Create new audio context\naudioContextRef.current=new(window.AudioContext||window.webkitAudioContext)();// Resume audio context if suspended (required for user interaction)\nif(audioContextRef.current.state==='suspended'){await audioContextRef.current.resume();}// Get audio data from blob\nconst arrayBuffer=await recordedAudio.arrayBuffer();const audioBuffer=await audioContextRef.current.decodeAudioData(arrayBuffer);// Create and configure audio source\nsourceRef.current=audioContextRef.current.createBufferSource();sourceRef.current.buffer=audioBuffer;sourceRef.current.connect(audioContextRef.current.destination);// Handle playback end\nsourceRef.current.onended=()=>{setIsPlaying(false);sourceRef.current=null;};// Start playback\nsourceRef.current.start();console.log('Playback started');}catch(error){console.error('Playback error:',error);setIsPlaying(false);alert('Playback failed: '+error.message);}},[recordedAudio]);const pauseRecording=useCallback(()=>{if(sourceRef.current){try{sourceRef.current.stop();sourceRef.current=null;setIsPlaying(false);console.log('Playback stopped');}catch(error){console.error('Error stopping playback:',error);setIsPlaying(false);}}},[]);const downloadRecording=useCallback(async()=>{if(!recordedAudio)return;const fileName=\"xiao_recording_\".concat(new Date().toISOString().replace(/[:.]/g,'-'),\".wav\");try{if(Capacitor.isNativePlatform()){// iOS/Android: Use Capacitor Filesystem\nconsole.log('📱 Saving to device filesystem...');// Convert blob to base64\nconst arrayBuffer=await recordedAudio.arrayBuffer();const base64Data=btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));// Write to Documents directory\nconst result=await Filesystem.writeFile({path:fileName,data:base64Data,directory:Directory.Documents});console.log('✅ File saved:',result.uri);alert(\"Recording saved to Documents folder: \".concat(fileName));}else{// Web: Use traditional download\nconsole.log('🌐 Downloading file...');const url=URL.createObjectURL(recordedAudio);const a=document.createElement('a');a.href=url;a.download=fileName;document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);console.log('✅ File downloaded');}}catch(error){console.error('❌ Download error:',error);alert('Failed to save recording: '+error.message);}},[recordedAudio]);// Load existing recordings\nconst loadRecordings=useCallback(async()=>{try{const recordingFiles=await bleAudioDataManager.listRecordings();const metadataFiles=recordingFiles.filter(f=>f.name.endsWith('.json'));const recordingsData=[];for(const file of metadataFiles){const recording=await bleAudioDataManager.getRecording(file.name);if(recording){recordingsData.push(recording);}}// Sort by timestamp (newest first)\nrecordingsData.sort((a,b)=>new Date(b.timestamp)-new Date(a.timestamp));setRecordings(recordingsData);console.log(\"\\uD83D\\uDCC1 Loaded \".concat(recordingsData.length,\" recordings\"));}catch(error){console.error('Error loading recordings:',error);}},[]);// Handle incoming audio data from BLE (continuous stream)\nuseEffect(()=>{const handleAudioData=async(data,audioStream)=>{console.log(\"\\uD83C\\uDFB5 AudioRecorder received data: \".concat(data.length,\" samples, recording: \").concat(isRecordingRef.current));// Track that audio stream is active\nsetAudioStreamActive(true);packetCountRef.current+=1;// Update packet count every 10 packets\nif(packetCountRef.current%10===0){setPacketCount(packetCountRef.current);}// Always capture audio data when recording is active\n// The firmware sends 160 samples every 10ms continuously\nif(isRecordingRef.current&&currentSessionRef.current){// Convert Int16Array to regular array for storage\nconst samples=Array.from(data);audioBufferRef.current.push(...samples);// Log audio data to session file\nawait bleAudioDataManager.logAudioData(currentSessionRef.current.sessionId,data,{bufferLength:audioBufferRef.current.length,packetNumber:packetCountRef.current});console.log(\"\\uD83D\\uDCDD Recording: captured \".concat(samples.length,\" samples, total: \").concat(audioBufferRef.current.length));// Log every 100 packets to avoid spam\nif(audioBufferRef.current.length%16000===0){console.log(\"\\uD83C\\uDFA4 Recording: \".concat(audioBufferRef.current.length,\" samples captured\"));}}else{console.log(\"\\u23F8\\uFE0F Audio data received but not recording (\".concat(data.length,\" samples)\"));}};audioHandlerRef.current=handleAudioData;// Register the handler with the parent component (only once)\nif(onAudioHandlerRegister){console.log('📡 AudioRecorder registering audio handler');onAudioHandlerRegister(handleAudioData);}},[]);// Remove currentSession dependency to prevent re-registration\n// Load recordings on component mount\nuseEffect(()=>{loadRecordings();},[loadRecordings]);const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=Math.floor(seconds%60);return\"\".concat(mins.toString().padStart(2,'0'),\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83C\\uDFA4 Audio Recorder\"}),/*#__PURE__*/_jsxs(Status,{recording:isRecording,playing:isPlaying,children:[isRecording&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Mic,{size:20}),\"Recording from XIAO MIC (BLE)... (\",audioStreamActive?'Stream Active':'No Stream',\")\"]}),isPlaying&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Play,{size:20}),\"Playing Recording\"]}),!isRecording&&!isPlaying&&audioData.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Mic,{size:20}),audioStreamActive?\"Audio Stream Active (\".concat(packetCount,\" packets)\"):'Ready to Record']}),!isRecording&&!isPlaying&&audioData.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Square,{size:20}),\"Recording Complete (\",audioStreamActive?'Stream Active':'No Stream',\")\"]})]}),isRecording&&/*#__PURE__*/_jsx(Timer,{children:formatTime(recordingDuration)}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[!isRecording?/*#__PURE__*/_jsxs(Button,{onClick:startRecording,disabled:!isConnected,children:[/*#__PURE__*/_jsx(Mic,{size:20}),\"Start Recording\"]}):/*#__PURE__*/_jsxs(Button,{onClick:stopRecording,recording:true,children:[/*#__PURE__*/_jsx(Square,{size:20}),\"Stop Recording\"]}),recordedAudio&&/*#__PURE__*/_jsxs(_Fragment,{children:[!isPlaying?/*#__PURE__*/_jsxs(Button,{onClick:playRecording,children:[/*#__PURE__*/_jsx(Play,{size:20}),\"Play\"]}):/*#__PURE__*/_jsxs(Button,{onClick:pauseRecording,playing:true,children:[/*#__PURE__*/_jsx(Pause,{size:20}),\"Pause\"]}),/*#__PURE__*/_jsxs(Button,{onClick:downloadRecording,children:[/*#__PURE__*/_jsx(Download,{size:20}),\"Download\"]})]})]}),/*#__PURE__*/_jsxs(AudioInfo,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Audio Stream Info:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Stream Active: \",audioStreamActive?'Yes':'No',/*#__PURE__*/_jsx(\"br\",{}),\"Packets Received: \",packetCount.toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),audioData.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Recording Info:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Duration: \",formatTime(recordingDuration),/*#__PURE__*/_jsx(\"br\",{}),\"Samples: \",audioData.length.toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),\"Sample Rate: \",SAMPLE_RATE,\" Hz\",/*#__PURE__*/_jsx(\"br\",{}),\"Channels: \",CHANNELS,/*#__PURE__*/_jsx(\"br\",{}),\"Size: \",(audioData.length*2/1024).toFixed(1),\" KB\"]})]})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","Mic","Square","Play","Pause","Download","List","Filesystem","Directory","Capacitor","bleAudioDataManager","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Button","button","_templateObject3","props","recording","playing","ButtonGroup","_templateObject4","Status","_templateObject5","Timer","_templateObject6","AudioInfo","_templateObject7","AudioRecorder","_ref","isConnected","onAudioData","onRecordingComplete","onAudioHandlerRegister","device","isRecording","setIsRecording","isPlaying","setIsPlaying","recordedAudio","setRecordedAudio","recordingDuration","setRecordingDuration","audioData","setAudioData","audioStreamActive","setAudioStreamActive","packetCount","setPacketCount","currentSession","setCurrentSession","recordings","setRecordings","audioBufferRef","startTimeRef","timerRef","audioContextRef","sourceRef","audioHandlerRef","isRecordingRef","packetCountRef","currentSessionRef","SAMPLE_RATE","CHANNELS","SAMPLE_WIDTH","current","Date","now","setInterval","elapsed","clearInterval","createAudioBlob","buffer","ArrayBuffer","length","view","DataView","writeString","offset","string","i","setUint8","charCodeAt","setUint32","setUint16","setInt16","Blob","type","startRecording","alert","console","log","deviceId","sessionInfo","deviceName","name","rssi","sessionId","logFile","startRecordingSession","sessionData","error","message","stopRecording","concat","audioArray","Int16Array","recordingMetadata","duration","sampleCount","fileName","metadataFile","saveAudioRecording","audioBlob","size","loadRecordings","playRecording","state","close","window","AudioContext","webkitAudioContext","resume","arrayBuffer","audioBuffer","decodeAudioData","createBufferSource","connect","destination","onended","start","pauseRecording","stop","downloadRecording","toISOString","replace","isNativePlatform","base64Data","btoa","String","fromCharCode","Uint8Array","result","writeFile","path","data","directory","Documents","uri","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","recordingFiles","listRecordings","metadataFiles","filter","f","endsWith","recordingsData","file","getRecording","push","sort","b","timestamp","handleAudioData","audioStream","samples","Array","from","logAudioData","bufferLength","packetNumber","formatTime","seconds","mins","Math","floor","secs","toString","padStart","children","onClick","disabled","toLocaleString","toFixed"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Mic, Square, Play, Pause, Download, List } from 'lucide-react';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Capacitor } from '@capacitor/core';\nimport { bleAudioDataManager } from '../utils/BleAudioDataManager';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  background: ${props => {\n    if (props.recording) return '#e74c3c';\n    if (props.playing) return '#f39c12';\n    return '#667eea';\n  }};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 2rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem;\n  min-width: 140px;\n  justify-content: center;\n\n  &:hover {\n    background: ${props => {\n      if (props.recording) return '#c0392b';\n      if (props.playing) return '#e67e22';\n      return '#5a67d8';\n    }};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin: 2rem 0;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => {\n    if (props.recording) return '#fdf2f2';\n    if (props.playing) return '#fef9e7';\n    return '#f8f9fa';\n  }};\n  color: ${props => {\n    if (props.recording) return '#e74c3c';\n    if (props.playing) return '#f39c12';\n    return '#666';\n  }};\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst Timer = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: #333;\n`;\n\nconst AudioInfo = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8f9fa;\n  border-radius: 12px;\n  font-family: monospace;\n  font-size: 0.9rem;\n`;\n\nconst AudioRecorder = ({ isConnected, onAudioData, onRecordingComplete, onAudioHandlerRegister, device }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recordedAudio, setRecordedAudio] = useState(null);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [audioStreamActive, setAudioStreamActive] = useState(false);\n  const [packetCount, setPacketCount] = useState(0);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  \n  const audioBufferRef = useRef([]);\n  const startTimeRef = useRef(null);\n  const timerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const sourceRef = useRef(null);\n  const audioHandlerRef = useRef(null);\n  const isRecordingRef = useRef(false);\n  const packetCountRef = useRef(0);\n  const currentSessionRef = useRef(null);\n\n  // Audio configuration (matching auto_pitch_recorder.py)\n  const SAMPLE_RATE = 16000;\n  const CHANNELS = 1;\n  const SAMPLE_WIDTH = 2;\n\n  useEffect(() => {\n    if (isRecording) {\n      startTimeRef.current = Date.now();\n      timerRef.current = setInterval(() => {\n        const elapsed = (Date.now() - startTimeRef.current) / 1000;\n        setRecordingDuration(elapsed);\n      }, 100);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  const createAudioBlob = useCallback((audioData) => {\n    // Create WAV file from audio data\n    const buffer = new ArrayBuffer(44 + audioData.length * 2);\n    const view = new DataView(buffer);\n    \n    // WAV header\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + audioData.length * 2, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, CHANNELS, true);\n    view.setUint32(24, SAMPLE_RATE, true);\n    view.setUint32(28, SAMPLE_RATE * CHANNELS * SAMPLE_WIDTH, true);\n    view.setUint16(32, CHANNELS * SAMPLE_WIDTH, true);\n    view.setUint16(34, 16, true);\n    writeString(36, 'data');\n    view.setUint32(40, audioData.length * 2, true);\n    \n    // Write audio data\n    let offset = 44;\n    for (let i = 0; i < audioData.length; i++) {\n      view.setInt16(offset, audioData[i], true);\n      offset += 2;\n    }\n    \n    return new Blob([buffer], { type: 'audio/wav' });\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    if (!isConnected) {\n      alert('Please connect to XIAO board first');\n      return;\n    }\n\n    console.log('🎤 Starting recording...');\n    console.log('🎤 Audio stream active:', audioStreamActive);\n    console.log('🎤 Packets received so far:', packetCount);\n    \n    try {\n      // Start recording session with data manager\n      const deviceId = device?.deviceId || 'unknown';\n      const sessionInfo = {\n        deviceName: device?.name || 'XIAO Board',\n        rssi: device?.rssi || 0\n      };\n      \n      const { sessionId, logFile } = await bleAudioDataManager.startRecordingSession(deviceId, sessionInfo);\n      const sessionData = { sessionId, logFile };\n      setCurrentSession(sessionData);\n      currentSessionRef.current = sessionData;\n      \n      setIsRecording(true);\n      isRecordingRef.current = true;\n      setAudioData([]);\n      audioBufferRef.current = [];\n      setRecordingDuration(0);\n      startTimeRef.current = Date.now();\n      \n      console.log('✅ Recording started with session:', sessionId);\n      console.log('📝 Log file:', logFile);\n    } catch (error) {\n      console.error('❌ Failed to start recording session:', error);\n      alert('Failed to start recording: ' + error.message);\n    }\n  }, [isConnected, audioStreamActive, packetCount, device]);\n\n  const stopRecording = useCallback(async () => {\n    setIsRecording(false);\n    isRecordingRef.current = false;\n    \n    console.log(`🛑 Stopping recording. Buffer length: ${audioBufferRef.current.length}`);\n    \n    if (audioBufferRef.current.length > 0 && currentSession) {\n      try {\n        // Convert audio data to Int16Array\n        const audioArray = new Int16Array(audioBufferRef.current);\n        setAudioData(audioArray);\n        \n        // Save recording using data manager\n        const recordingMetadata = {\n          duration: recordingDuration,\n          sampleCount: audioArray.length,\n          deviceId: device?.deviceId,\n          deviceName: device?.name\n        };\n        \n        const { fileName, metadataFile, recording } = await bleAudioDataManager.saveAudioRecording(\n          currentSession.sessionId, \n          audioArray, \n          recordingMetadata\n        );\n        \n        // Create audio blob for immediate playback\n        const audioBlob = createAudioBlob(audioArray);\n        setRecordedAudio(audioBlob);\n        \n        // Notify parent component\n        if (onRecordingComplete) {\n          onRecordingComplete(audioArray);\n        }\n        \n        console.log(`✅ Recording saved: ${fileName}`);\n        console.log(`📄 Metadata: ${metadataFile}`);\n        console.log(`🎵 Audio blob created: ${audioBlob.size} bytes`);\n        \n        // Refresh recordings list\n        await loadRecordings();\n        \n      } catch (error) {\n        console.error('❌ Failed to save recording:', error);\n        alert('Failed to save recording: ' + error.message);\n      }\n    } else {\n      console.log('⚠️ No audio data captured during recording');\n      console.log('⚠️ Buffer length:', audioBufferRef.current.length);\n      console.log('⚠️ Current session:', currentSession);\n    }\n    \n    setCurrentSession(null);\n    currentSessionRef.current = null;\n  }, [onRecordingComplete, createAudioBlob, currentSession, recordingDuration, device, loadRecordings]);\n\n  const playRecording = useCallback(async () => {\n    if (!recordedAudio) return;\n\n    try {\n      setIsPlaying(true);\n      \n      // Close existing audio context if any\n      if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n        await audioContextRef.current.close();\n      }\n      \n      // Create new audio context\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      \n      // Resume audio context if suspended (required for user interaction)\n      if (audioContextRef.current.state === 'suspended') {\n        await audioContextRef.current.resume();\n      }\n      \n      // Get audio data from blob\n      const arrayBuffer = await recordedAudio.arrayBuffer();\n      const audioBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n      \n      // Create and configure audio source\n      sourceRef.current = audioContextRef.current.createBufferSource();\n      sourceRef.current.buffer = audioBuffer;\n      sourceRef.current.connect(audioContextRef.current.destination);\n      \n      // Handle playback end\n      sourceRef.current.onended = () => {\n        setIsPlaying(false);\n        sourceRef.current = null;\n      };\n      \n      // Start playback\n      sourceRef.current.start();\n      console.log('Playback started');\n      \n    } catch (error) {\n      console.error('Playback error:', error);\n      setIsPlaying(false);\n      alert('Playback failed: ' + error.message);\n    }\n  }, [recordedAudio]);\n\n  const pauseRecording = useCallback(() => {\n    if (sourceRef.current) {\n      try {\n        sourceRef.current.stop();\n        sourceRef.current = null;\n        setIsPlaying(false);\n        console.log('Playback stopped');\n      } catch (error) {\n        console.error('Error stopping playback:', error);\n        setIsPlaying(false);\n      }\n    }\n  }, []);\n\n  const downloadRecording = useCallback(async () => {\n    if (!recordedAudio) return;\n\n    const fileName = `xiao_recording_${new Date().toISOString().replace(/[:.]/g, '-')}.wav`;\n    \n    try {\n      if (Capacitor.isNativePlatform()) {\n        // iOS/Android: Use Capacitor Filesystem\n        console.log('📱 Saving to device filesystem...');\n        \n        // Convert blob to base64\n        const arrayBuffer = await recordedAudio.arrayBuffer();\n        const base64Data = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n        \n        // Write to Documents directory\n        const result = await Filesystem.writeFile({\n          path: fileName,\n          data: base64Data,\n          directory: Directory.Documents,\n        });\n        \n        console.log('✅ File saved:', result.uri);\n        alert(`Recording saved to Documents folder: ${fileName}`);\n      } else {\n        // Web: Use traditional download\n        console.log('🌐 Downloading file...');\n        const url = URL.createObjectURL(recordedAudio);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        console.log('✅ File downloaded');\n      }\n    } catch (error) {\n      console.error('❌ Download error:', error);\n      alert('Failed to save recording: ' + error.message);\n    }\n  }, [recordedAudio]);\n\n  // Load existing recordings\n  const loadRecordings = useCallback(async () => {\n    try {\n      const recordingFiles = await bleAudioDataManager.listRecordings();\n      const metadataFiles = recordingFiles.filter(f => f.name.endsWith('.json'));\n      \n      const recordingsData = [];\n      for (const file of metadataFiles) {\n        const recording = await bleAudioDataManager.getRecording(file.name);\n        if (recording) {\n          recordingsData.push(recording);\n        }\n      }\n      \n      // Sort by timestamp (newest first)\n      recordingsData.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      setRecordings(recordingsData);\n      \n      console.log(`📁 Loaded ${recordingsData.length} recordings`);\n    } catch (error) {\n      console.error('Error loading recordings:', error);\n    }\n  }, []);\n\n  // Handle incoming audio data from BLE (continuous stream)\n  useEffect(() => {\n    const handleAudioData = async (data, audioStream) => {\n      console.log(`🎵 AudioRecorder received data: ${data.length} samples, recording: ${isRecordingRef.current}`);\n      \n      // Track that audio stream is active\n      setAudioStreamActive(true);\n      packetCountRef.current += 1;\n      \n      // Update packet count every 10 packets\n      if (packetCountRef.current % 10 === 0) {\n        setPacketCount(packetCountRef.current);\n      }\n      \n      // Always capture audio data when recording is active\n      // The firmware sends 160 samples every 10ms continuously\n      if (isRecordingRef.current && currentSessionRef.current) {\n        // Convert Int16Array to regular array for storage\n        const samples = Array.from(data);\n        audioBufferRef.current.push(...samples);\n        \n        // Log audio data to session file\n        await bleAudioDataManager.logAudioData(currentSessionRef.current.sessionId, data, {\n          bufferLength: audioBufferRef.current.length,\n          packetNumber: packetCountRef.current\n        });\n        \n        console.log(`📝 Recording: captured ${samples.length} samples, total: ${audioBufferRef.current.length}`);\n        \n        // Log every 100 packets to avoid spam\n        if (audioBufferRef.current.length % 16000 === 0) {\n          console.log(`🎤 Recording: ${audioBufferRef.current.length} samples captured`);\n        }\n      } else {\n        console.log(`⏸️ Audio data received but not recording (${data.length} samples)`);\n      }\n    };\n    \n    audioHandlerRef.current = handleAudioData;\n    \n    // Register the handler with the parent component (only once)\n    if (onAudioHandlerRegister) {\n      console.log('📡 AudioRecorder registering audio handler');\n      onAudioHandlerRegister(handleAudioData);\n    }\n  }, []); // Remove currentSession dependency to prevent re-registration\n\n  // Load recordings on component mount\n  useEffect(() => {\n    loadRecordings();\n  }, [loadRecordings]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <Container>\n      <Title>🎤 Audio Recorder</Title>\n      \n      <Status recording={isRecording} playing={isPlaying}>\n        {isRecording && (\n          <>\n            <Mic size={20} />\n            Recording from XIAO MIC (BLE)... ({audioStreamActive ? 'Stream Active' : 'No Stream'})\n          </>\n        )}\n        {isPlaying && (\n          <>\n            <Play size={20} />\n            Playing Recording\n          </>\n        )}\n        {!isRecording && !isPlaying && audioData.length === 0 && (\n          <>\n            <Mic size={20} />\n            {audioStreamActive ? `Audio Stream Active (${packetCount} packets)` : 'Ready to Record'}\n          </>\n        )}\n        {!isRecording && !isPlaying && audioData.length > 0 && (\n          <>\n            <Square size={20} />\n            Recording Complete ({audioStreamActive ? 'Stream Active' : 'No Stream'})\n          </>\n        )}\n      </Status>\n\n      {isRecording && (\n        <Timer>\n          {formatTime(recordingDuration)}\n        </Timer>\n      )}\n\n      <ButtonGroup>\n        {!isRecording ? (\n          <Button onClick={startRecording} disabled={!isConnected}>\n            <Mic size={20} />\n            Start Recording\n          </Button>\n        ) : (\n          <Button onClick={stopRecording} recording>\n            <Square size={20} />\n            Stop Recording\n          </Button>\n        )}\n\n        {recordedAudio && (\n          <>\n            {!isPlaying ? (\n              <Button onClick={playRecording}>\n                <Play size={20} />\n                Play\n              </Button>\n            ) : (\n              <Button onClick={pauseRecording} playing>\n                <Pause size={20} />\n                Pause\n              </Button>\n            )}\n            \n            <Button onClick={downloadRecording}>\n              <Download size={20} />\n              Download\n            </Button>\n          </>\n        )}\n      </ButtonGroup>\n\n      <AudioInfo>\n        <strong>Audio Stream Info:</strong><br />\n        Stream Active: {audioStreamActive ? 'Yes' : 'No'}<br />\n        Packets Received: {packetCount.toLocaleString()}<br />\n        {audioData.length > 0 && (\n          <>\n            <br /><strong>Recording Info:</strong><br />\n            Duration: {formatTime(recordingDuration)}<br />\n            Samples: {audioData.length.toLocaleString()}<br />\n            Sample Rate: {SAMPLE_RATE} Hz<br />\n            Channels: {CHANNELS}<br />\n            Size: {(audioData.length * 2 / 1024).toFixed(1)} KB\n          </>\n        )}\n      </AudioInfo>\n    </Container>\n  );\n};\n\nexport default AudioRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}