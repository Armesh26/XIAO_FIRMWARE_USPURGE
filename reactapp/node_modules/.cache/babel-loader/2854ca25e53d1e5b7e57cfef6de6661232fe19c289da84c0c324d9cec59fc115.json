{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isDeepgramError } from \"../lib/errors\";\nimport { AbstractRestClient } from \"./AbstractRestClient\";\nexport class AuthRestClient extends AbstractRestClient {\n  constructor() {\n    super(...arguments);\n    this.namespace = \"auth\";\n  }\n  /**\n   * Generates a new temporary token for the Deepgram API.\n   * @param endpoint Optional custom endpoint to use for the request. Defaults to \":version/auth/grant\".\n   * @returns Object containing the result of the request or an error if one occurred. Result will contain access_token and expires_in properties.\n   */\n  grantToken() {\n    let endpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \":version/auth/grant\";\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const requestUrl = this.getRequestUrl(endpoint);\n        const result = yield this.post(requestUrl, \"\").then(result => result.json());\n        return {\n          result,\n          error: null\n        };\n      } catch (error) {\n        if (isDeepgramError(error)) {\n          return {\n            result: null,\n            error\n          };\n        }\n        throw error;\n      }\n    });\n  }\n}","map":{"version":3,"names":["isDeepgramError","AbstractRestClient","AuthRestClient","constructor","namespace","grantToken","endpoint","arguments","length","undefined","requestUrl","getRequestUrl","result","post","then","json","error"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@deepgram/sdk/src/packages/AuthRestClient.ts"],"sourcesContent":["import { isDeepgramError } from \"../lib/errors\";\nimport type { DeepgramResponse } from \"../lib/types/DeepgramResponse\";\nimport type { GrantTokenResponse } from \"../lib/types/GrantTokenResponse\";\nimport { AbstractRestClient } from \"./AbstractRestClient\";\n\nexport class AuthRestClient extends AbstractRestClient {\n  public namespace: string = \"auth\";\n\n  /**\n   * Generates a new temporary token for the Deepgram API.\n   * @param endpoint Optional custom endpoint to use for the request. Defaults to \":version/auth/grant\".\n   * @returns Object containing the result of the request or an error if one occurred. Result will contain access_token and expires_in properties.\n   */\n  public async grantToken(\n    endpoint = \":version/auth/grant\"\n  ): Promise<DeepgramResponse<GrantTokenResponse>> {\n    try {\n      const requestUrl = this.getRequestUrl(endpoint);\n      const result: GrantTokenResponse = await this.post(requestUrl, \"\").then((result) =>\n        result.json()\n      );\n\n      return { result, error: null };\n    } catch (error) {\n      if (isDeepgramError(error)) {\n        return { result: null, error };\n      }\n\n      throw error;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,eAAe,QAAQ,eAAe;AAG/C,SAASC,kBAAkB,QAAQ,sBAAsB;AAEzD,OAAM,MAAOC,cAAe,SAAQD,kBAAkB;EAAtDE,YAAA;;IACS,KAAAC,SAAS,GAAW,MAAM;EAyBnC;EAvBE;;;;;EAKaC,UAAUA,CAAA,EACW;IAAA,IAAhCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,qBAAqB;;MAEhC,IAAI;QACF,MAAMG,UAAU,GAAG,IAAI,CAACC,aAAa,CAACL,QAAQ,CAAC;QAC/C,MAAMM,MAAM,GAAuB,MAAM,IAAI,CAACC,IAAI,CAACH,UAAU,EAAE,EAAE,CAAC,CAACI,IAAI,CAAEF,MAAM,IAC7EA,MAAM,CAACG,IAAI,EAAE,CACd;QAED,OAAO;UAAEH,MAAM;UAAEI,KAAK,EAAE;QAAI,CAAE;OAC/B,CAAC,OAAOA,KAAK,EAAE;QACd,IAAIhB,eAAe,CAACgB,KAAK,CAAC,EAAE;UAC1B,OAAO;YAAEJ,MAAM,EAAE,IAAI;YAAEI;UAAK,CAAE;;QAGhC,MAAMA,KAAK;;IAEf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}