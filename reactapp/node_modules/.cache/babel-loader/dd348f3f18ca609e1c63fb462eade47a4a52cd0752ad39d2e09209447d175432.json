{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState,useRef,useCallback,useEffect}from'react';import styled from'styled-components';import{Mic,Square,Play,Pause,Download}from'lucide-react';import{Filesystem,Directory}from'@capacitor/filesystem';import{Capacitor}from'@capacitor/core';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 20px;\\n  padding: 2rem;\\n  margin: 1rem;\\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n\"])));const Title=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n\"])));const Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  padding: 1rem 2rem;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 0.5rem;\\n  min-width: 140px;\\n  justify-content: center;\\n\\n  &:hover {\\n    background: \",\";\\n    transform: translateY(-2px);\\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: none;\\n  }\\n\"])),props=>{if(props.recording)return'#e74c3c';if(props.playing)return'#f39c12';return'#667eea';},props=>{if(props.recording)return'#c0392b';if(props.playing)return'#e67e22';return'#5a67d8';});const ButtonGroup=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  gap: 1rem;\\n  flex-wrap: wrap;\\n  margin: 2rem 0;\\n\"])));const Status=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  border-radius: 12px;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  justify-content: center;\\n\"])),props=>{if(props.recording)return'#fdf2f2';if(props.playing)return'#fef9e7';return'#f8f9fa';},props=>{if(props.recording)return'#e74c3c';if(props.playing)return'#f39c12';return'#666';});const Timer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 2rem;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 1rem 0;\\n  color: #333;\\n\"])));const AudioInfo=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n  padding: 1rem;\\n  background: #f8f9fa;\\n  border-radius: 12px;\\n  font-family: monospace;\\n  font-size: 0.9rem;\\n\"])));const AudioRecorder=_ref=>{let{isConnected,onAudioData,onRecordingComplete,onAudioHandlerRegister}=_ref;const[isRecording,setIsRecording]=useState(false);const[isPlaying,setIsPlaying]=useState(false);const[recordedAudio,setRecordedAudio]=useState(null);const[recordingDuration,setRecordingDuration]=useState(0);const[audioData,setAudioData]=useState([]);const[audioStreamActive,setAudioStreamActive]=useState(false);const[packetCount,setPacketCount]=useState(0);const audioBufferRef=useRef([]);const startTimeRef=useRef(null);const timerRef=useRef(null);const audioContextRef=useRef(null);const sourceRef=useRef(null);const audioHandlerRef=useRef(null);const isRecordingRef=useRef(false);const packetCountRef=useRef(0);// Audio configuration (matching auto_pitch_recorder.py)\nconst SAMPLE_RATE=16000;const CHANNELS=1;const SAMPLE_WIDTH=2;useEffect(()=>{if(isRecording){startTimeRef.current=Date.now();timerRef.current=setInterval(()=>{const elapsed=(Date.now()-startTimeRef.current)/1000;setRecordingDuration(elapsed);},100);}else{if(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}}return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[isRecording]);const createAudioBlob=useCallback(audioData=>{// Create WAV file from audio data\nconst buffer=new ArrayBuffer(44+audioData.length*2);const view=new DataView(buffer);// WAV header\nconst writeString=(offset,string)=>{for(let i=0;i<string.length;i++){view.setUint8(offset+i,string.charCodeAt(i));}};writeString(0,'RIFF');view.setUint32(4,36+audioData.length*2,true);writeString(8,'WAVE');writeString(12,'fmt ');view.setUint32(16,16,true);view.setUint16(20,1,true);view.setUint16(22,CHANNELS,true);view.setUint32(24,SAMPLE_RATE,true);view.setUint32(28,SAMPLE_RATE*CHANNELS*SAMPLE_WIDTH,true);view.setUint16(32,CHANNELS*SAMPLE_WIDTH,true);view.setUint16(34,16,true);writeString(36,'data');view.setUint32(40,audioData.length*2,true);// Write audio data\nlet offset=44;for(let i=0;i<audioData.length;i++){view.setInt16(offset,audioData[i],true);offset+=2;}return new Blob([buffer],{type:'audio/wav'});},[]);const startRecording=useCallback(()=>{if(!isConnected){alert('Please connect to XIAO board first');return;}console.log('🎤 Starting recording...');console.log('🎤 Audio stream active:',audioStreamActive);console.log('🎤 Packets received so far:',packetCount);setIsRecording(true);isRecordingRef.current=true;setAudioData([]);audioBufferRef.current=[];setRecordingDuration(0);startTimeRef.current=Date.now();console.log('✅ Recording started, waiting for audio data...');},[isConnected,audioStreamActive,packetCount]);const stopRecording=useCallback(()=>{setIsRecording(false);isRecordingRef.current=false;console.log(\"\\uD83D\\uDED1 Stopping recording. Buffer length: \".concat(audioBufferRef.current.length));if(audioBufferRef.current.length>0){// Convert audio data to Int16Array\nconst audioArray=new Int16Array(audioBufferRef.current);setAudioData(audioArray);// Create audio blob for playback\nconst audioBlob=createAudioBlob(audioArray);setRecordedAudio(audioBlob);// Notify parent component\nif(onRecordingComplete){onRecordingComplete(audioArray);}console.log(\"\\u2705 Recording stopped. Captured \".concat(audioArray.length,\" samples\"));console.log(\"\\uD83C\\uDFB5 Audio blob created: \".concat(audioBlob.size,\" bytes\"));console.log(\"\\uD83C\\uDFB5 Blob type: \".concat(audioBlob.type));console.log(\"\\uD83C\\uDFB5 Blob constructor: \".concat(audioBlob.constructor.name));// Test blob functionality\ntry{const testUrl=URL.createObjectURL(audioBlob);console.log(\"\\uD83C\\uDFB5 Blob URL created: \".concat(testUrl));URL.revokeObjectURL(testUrl);}catch(error){console.error('❌ Blob URL creation failed:',error);}}else{console.log('⚠️ No audio data captured during recording');}},[onRecordingComplete,createAudioBlob]);const playRecording=useCallback(async()=>{if(!recordedAudio)return;try{setIsPlaying(true);// Close existing audio context if any\nif(audioContextRef.current&&audioContextRef.current.state!=='closed'){await audioContextRef.current.close();}// Create new audio context\naudioContextRef.current=new(window.AudioContext||window.webkitAudioContext)();// Resume audio context if suspended (required for user interaction)\nif(audioContextRef.current.state==='suspended'){await audioContextRef.current.resume();}// Get audio data from blob\nconst arrayBuffer=await recordedAudio.arrayBuffer();const audioBuffer=await audioContextRef.current.decodeAudioData(arrayBuffer);// Create and configure audio source\nsourceRef.current=audioContextRef.current.createBufferSource();sourceRef.current.buffer=audioBuffer;sourceRef.current.connect(audioContextRef.current.destination);// Handle playback end\nsourceRef.current.onended=()=>{setIsPlaying(false);sourceRef.current=null;};// Start playback\nsourceRef.current.start();console.log('Playback started');}catch(error){console.error('Playback error:',error);setIsPlaying(false);alert('Playback failed: '+error.message);}},[recordedAudio]);const pauseRecording=useCallback(()=>{if(sourceRef.current){try{sourceRef.current.stop();sourceRef.current=null;setIsPlaying(false);console.log('Playback stopped');}catch(error){console.error('Error stopping playback:',error);setIsPlaying(false);}}},[]);const downloadRecording=useCallback(async()=>{if(!recordedAudio)return;const fileName=\"xiao_recording_\".concat(new Date().toISOString().replace(/[:.]/g,'-'),\".wav\");try{if(Capacitor.isNativePlatform()){// iOS/Android: Use Capacitor Filesystem\nconsole.log('📱 Saving to device filesystem...');// Convert blob to base64\nconst arrayBuffer=await recordedAudio.arrayBuffer();const base64Data=btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));// Write to Documents directory\nconst result=await Filesystem.writeFile({path:fileName,data:base64Data,directory:Directory.Documents});console.log('✅ File saved:',result.uri);alert(\"Recording saved to Documents folder: \".concat(fileName));}else{// Web: Use traditional download\nconsole.log('🌐 Downloading file...');const url=URL.createObjectURL(recordedAudio);const a=document.createElement('a');a.href=url;a.download=fileName;document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);console.log('✅ File downloaded');}}catch(error){console.error('❌ Download error:',error);alert('Failed to save recording: '+error.message);}},[recordedAudio]);// Handle incoming audio data from BLE (continuous stream)\nuseEffect(()=>{const handleAudioData=(data,audioStream)=>{console.log(\"\\uD83C\\uDFB5 AudioRecorder received data: \".concat(data.length,\" samples, recording: \").concat(isRecordingRef.current));// Track that audio stream is active\nsetAudioStreamActive(true);packetCountRef.current+=1;// Update packet count every 10 packets\nif(packetCountRef.current%10===0){setPacketCount(packetCountRef.current);}// Always capture audio data when recording is active\n// The firmware sends 160 samples every 10ms continuously\nif(isRecordingRef.current){// Convert Int16Array to regular array for storage\nconst samples=Array.from(data);audioBufferRef.current.push(...samples);console.log(\"\\uD83D\\uDCDD Recording: captured \".concat(samples.length,\" samples, total: \").concat(audioBufferRef.current.length));// Log every 100 packets to avoid spam\nif(audioBufferRef.current.length%16000===0){console.log(\"\\uD83C\\uDFA4 Recording: \".concat(audioBufferRef.current.length,\" samples captured\"));}}else{console.log(\"\\u23F8\\uFE0F Audio data received but not recording (\".concat(data.length,\" samples)\"));}};audioHandlerRef.current=handleAudioData;// Register the handler with the parent component\nif(onAudioHandlerRegister){onAudioHandlerRegister(handleAudioData);}},[onAudioHandlerRegister]);const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=Math.floor(seconds%60);return\"\".concat(mins.toString().padStart(2,'0'),\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83C\\uDFA4 Audio Recorder\"}),/*#__PURE__*/_jsxs(Status,{recording:isRecording,playing:isPlaying,children:[isRecording&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Mic,{size:20}),\"Recording from XIAO MIC (BLE)... (\",audioStreamActive?'Stream Active':'No Stream',\")\"]}),isPlaying&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Play,{size:20}),\"Playing Recording\"]}),!isRecording&&!isPlaying&&audioData.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Mic,{size:20}),audioStreamActive?\"Audio Stream Active (\".concat(packetCount,\" packets)\"):'Ready to Record']}),!isRecording&&!isPlaying&&audioData.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Square,{size:20}),\"Recording Complete (\",audioStreamActive?'Stream Active':'No Stream',\")\"]})]}),isRecording&&/*#__PURE__*/_jsx(Timer,{children:formatTime(recordingDuration)}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[!isRecording?/*#__PURE__*/_jsxs(Button,{onClick:startRecording,disabled:!isConnected,children:[/*#__PURE__*/_jsx(Mic,{size:20}),\"Start Recording\"]}):/*#__PURE__*/_jsxs(Button,{onClick:stopRecording,recording:true,children:[/*#__PURE__*/_jsx(Square,{size:20}),\"Stop Recording\"]}),recordedAudio&&/*#__PURE__*/_jsxs(_Fragment,{children:[!isPlaying?/*#__PURE__*/_jsxs(Button,{onClick:playRecording,children:[/*#__PURE__*/_jsx(Play,{size:20}),\"Play\"]}):/*#__PURE__*/_jsxs(Button,{onClick:pauseRecording,playing:true,children:[/*#__PURE__*/_jsx(Pause,{size:20}),\"Pause\"]}),/*#__PURE__*/_jsxs(Button,{onClick:downloadRecording,children:[/*#__PURE__*/_jsx(Download,{size:20}),\"Download\"]})]})]}),/*#__PURE__*/_jsxs(AudioInfo,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Audio Stream Info:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Stream Active: \",audioStreamActive?'Yes':'No',/*#__PURE__*/_jsx(\"br\",{}),\"Packets Received: \",packetCount.toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),audioData.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Recording Info:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Duration: \",formatTime(recordingDuration),/*#__PURE__*/_jsx(\"br\",{}),\"Samples: \",audioData.length.toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),\"Sample Rate: \",SAMPLE_RATE,\" Hz\",/*#__PURE__*/_jsx(\"br\",{}),\"Channels: \",CHANNELS,/*#__PURE__*/_jsx(\"br\",{}),\"Size: \",(audioData.length*2/1024).toFixed(1),\" KB\"]})]})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","Mic","Square","Play","Pause","Download","Filesystem","Directory","Capacitor","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Button","button","_templateObject3","props","recording","playing","ButtonGroup","_templateObject4","Status","_templateObject5","Timer","_templateObject6","AudioInfo","_templateObject7","AudioRecorder","_ref","isConnected","onAudioData","onRecordingComplete","onAudioHandlerRegister","isRecording","setIsRecording","isPlaying","setIsPlaying","recordedAudio","setRecordedAudio","recordingDuration","setRecordingDuration","audioData","setAudioData","audioStreamActive","setAudioStreamActive","packetCount","setPacketCount","audioBufferRef","startTimeRef","timerRef","audioContextRef","sourceRef","audioHandlerRef","isRecordingRef","packetCountRef","SAMPLE_RATE","CHANNELS","SAMPLE_WIDTH","current","Date","now","setInterval","elapsed","clearInterval","createAudioBlob","buffer","ArrayBuffer","length","view","DataView","writeString","offset","string","i","setUint8","charCodeAt","setUint32","setUint16","setInt16","Blob","type","startRecording","alert","console","log","stopRecording","concat","audioArray","Int16Array","audioBlob","size","constructor","name","testUrl","URL","createObjectURL","revokeObjectURL","error","playRecording","state","close","window","AudioContext","webkitAudioContext","resume","arrayBuffer","audioBuffer","decodeAudioData","createBufferSource","connect","destination","onended","start","message","pauseRecording","stop","downloadRecording","fileName","toISOString","replace","isNativePlatform","base64Data","btoa","String","fromCharCode","Uint8Array","result","writeFile","path","data","directory","Documents","uri","url","a","document","createElement","href","download","body","appendChild","click","removeChild","handleAudioData","audioStream","samples","Array","from","push","formatTime","seconds","mins","Math","floor","secs","toString","padStart","children","onClick","disabled","toLocaleString","toFixed"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Mic, Square, Play, Pause, Download } from 'lucide-react';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Capacitor } from '@capacitor/core';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  background: ${props => {\n    if (props.recording) return '#e74c3c';\n    if (props.playing) return '#f39c12';\n    return '#667eea';\n  }};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 2rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem;\n  min-width: 140px;\n  justify-content: center;\n\n  &:hover {\n    background: ${props => {\n      if (props.recording) return '#c0392b';\n      if (props.playing) return '#e67e22';\n      return '#5a67d8';\n    }};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin: 2rem 0;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => {\n    if (props.recording) return '#fdf2f2';\n    if (props.playing) return '#fef9e7';\n    return '#f8f9fa';\n  }};\n  color: ${props => {\n    if (props.recording) return '#e74c3c';\n    if (props.playing) return '#f39c12';\n    return '#666';\n  }};\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst Timer = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: #333;\n`;\n\nconst AudioInfo = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8f9fa;\n  border-radius: 12px;\n  font-family: monospace;\n  font-size: 0.9rem;\n`;\n\nconst AudioRecorder = ({ isConnected, onAudioData, onRecordingComplete, onAudioHandlerRegister }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recordedAudio, setRecordedAudio] = useState(null);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [audioStreamActive, setAudioStreamActive] = useState(false);\n  const [packetCount, setPacketCount] = useState(0);\n  \n  const audioBufferRef = useRef([]);\n  const startTimeRef = useRef(null);\n  const timerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const sourceRef = useRef(null);\n  const audioHandlerRef = useRef(null);\n  const isRecordingRef = useRef(false);\n  const packetCountRef = useRef(0);\n\n  // Audio configuration (matching auto_pitch_recorder.py)\n  const SAMPLE_RATE = 16000;\n  const CHANNELS = 1;\n  const SAMPLE_WIDTH = 2;\n\n  useEffect(() => {\n    if (isRecording) {\n      startTimeRef.current = Date.now();\n      timerRef.current = setInterval(() => {\n        const elapsed = (Date.now() - startTimeRef.current) / 1000;\n        setRecordingDuration(elapsed);\n      }, 100);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  const createAudioBlob = useCallback((audioData) => {\n    // Create WAV file from audio data\n    const buffer = new ArrayBuffer(44 + audioData.length * 2);\n    const view = new DataView(buffer);\n    \n    // WAV header\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + audioData.length * 2, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, CHANNELS, true);\n    view.setUint32(24, SAMPLE_RATE, true);\n    view.setUint32(28, SAMPLE_RATE * CHANNELS * SAMPLE_WIDTH, true);\n    view.setUint16(32, CHANNELS * SAMPLE_WIDTH, true);\n    view.setUint16(34, 16, true);\n    writeString(36, 'data');\n    view.setUint32(40, audioData.length * 2, true);\n    \n    // Write audio data\n    let offset = 44;\n    for (let i = 0; i < audioData.length; i++) {\n      view.setInt16(offset, audioData[i], true);\n      offset += 2;\n    }\n    \n    return new Blob([buffer], { type: 'audio/wav' });\n  }, []);\n\n  const startRecording = useCallback(() => {\n    if (!isConnected) {\n      alert('Please connect to XIAO board first');\n      return;\n    }\n\n    console.log('🎤 Starting recording...');\n    console.log('🎤 Audio stream active:', audioStreamActive);\n    console.log('🎤 Packets received so far:', packetCount);\n    \n    setIsRecording(true);\n    isRecordingRef.current = true;\n    setAudioData([]);\n    audioBufferRef.current = [];\n    setRecordingDuration(0);\n    startTimeRef.current = Date.now();\n    console.log('✅ Recording started, waiting for audio data...');\n  }, [isConnected, audioStreamActive, packetCount]);\n\n  const stopRecording = useCallback(() => {\n    setIsRecording(false);\n    isRecordingRef.current = false;\n    \n    console.log(`🛑 Stopping recording. Buffer length: ${audioBufferRef.current.length}`);\n    \n    if (audioBufferRef.current.length > 0) {\n      // Convert audio data to Int16Array\n      const audioArray = new Int16Array(audioBufferRef.current);\n      setAudioData(audioArray);\n      \n      // Create audio blob for playback\n      const audioBlob = createAudioBlob(audioArray);\n      setRecordedAudio(audioBlob);\n      \n      // Notify parent component\n      if (onRecordingComplete) {\n        onRecordingComplete(audioArray);\n      }\n      \n      console.log(`✅ Recording stopped. Captured ${audioArray.length} samples`);\n      console.log(`🎵 Audio blob created: ${audioBlob.size} bytes`);\n      console.log(`🎵 Blob type: ${audioBlob.type}`);\n      console.log(`🎵 Blob constructor: ${audioBlob.constructor.name}`);\n      \n      // Test blob functionality\n      try {\n        const testUrl = URL.createObjectURL(audioBlob);\n        console.log(`🎵 Blob URL created: ${testUrl}`);\n        URL.revokeObjectURL(testUrl);\n      } catch (error) {\n        console.error('❌ Blob URL creation failed:', error);\n      }\n    } else {\n      console.log('⚠️ No audio data captured during recording');\n    }\n  }, [onRecordingComplete, createAudioBlob]);\n\n  const playRecording = useCallback(async () => {\n    if (!recordedAudio) return;\n\n    try {\n      setIsPlaying(true);\n      \n      // Close existing audio context if any\n      if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n        await audioContextRef.current.close();\n      }\n      \n      // Create new audio context\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      \n      // Resume audio context if suspended (required for user interaction)\n      if (audioContextRef.current.state === 'suspended') {\n        await audioContextRef.current.resume();\n      }\n      \n      // Get audio data from blob\n      const arrayBuffer = await recordedAudio.arrayBuffer();\n      const audioBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n      \n      // Create and configure audio source\n      sourceRef.current = audioContextRef.current.createBufferSource();\n      sourceRef.current.buffer = audioBuffer;\n      sourceRef.current.connect(audioContextRef.current.destination);\n      \n      // Handle playback end\n      sourceRef.current.onended = () => {\n        setIsPlaying(false);\n        sourceRef.current = null;\n      };\n      \n      // Start playback\n      sourceRef.current.start();\n      console.log('Playback started');\n      \n    } catch (error) {\n      console.error('Playback error:', error);\n      setIsPlaying(false);\n      alert('Playback failed: ' + error.message);\n    }\n  }, [recordedAudio]);\n\n  const pauseRecording = useCallback(() => {\n    if (sourceRef.current) {\n      try {\n        sourceRef.current.stop();\n        sourceRef.current = null;\n        setIsPlaying(false);\n        console.log('Playback stopped');\n      } catch (error) {\n        console.error('Error stopping playback:', error);\n        setIsPlaying(false);\n      }\n    }\n  }, []);\n\n  const downloadRecording = useCallback(async () => {\n    if (!recordedAudio) return;\n\n    const fileName = `xiao_recording_${new Date().toISOString().replace(/[:.]/g, '-')}.wav`;\n    \n    try {\n      if (Capacitor.isNativePlatform()) {\n        // iOS/Android: Use Capacitor Filesystem\n        console.log('📱 Saving to device filesystem...');\n        \n        // Convert blob to base64\n        const arrayBuffer = await recordedAudio.arrayBuffer();\n        const base64Data = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n        \n        // Write to Documents directory\n        const result = await Filesystem.writeFile({\n          path: fileName,\n          data: base64Data,\n          directory: Directory.Documents,\n        });\n        \n        console.log('✅ File saved:', result.uri);\n        alert(`Recording saved to Documents folder: ${fileName}`);\n      } else {\n        // Web: Use traditional download\n        console.log('🌐 Downloading file...');\n        const url = URL.createObjectURL(recordedAudio);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        console.log('✅ File downloaded');\n      }\n    } catch (error) {\n      console.error('❌ Download error:', error);\n      alert('Failed to save recording: ' + error.message);\n    }\n  }, [recordedAudio]);\n\n  // Handle incoming audio data from BLE (continuous stream)\n  useEffect(() => {\n    const handleAudioData = (data, audioStream) => {\n      console.log(`🎵 AudioRecorder received data: ${data.length} samples, recording: ${isRecordingRef.current}`);\n      \n      // Track that audio stream is active\n      setAudioStreamActive(true);\n      packetCountRef.current += 1;\n      \n      // Update packet count every 10 packets\n      if (packetCountRef.current % 10 === 0) {\n        setPacketCount(packetCountRef.current);\n      }\n      \n      // Always capture audio data when recording is active\n      // The firmware sends 160 samples every 10ms continuously\n      if (isRecordingRef.current) {\n        // Convert Int16Array to regular array for storage\n        const samples = Array.from(data);\n        audioBufferRef.current.push(...samples);\n        \n        console.log(`📝 Recording: captured ${samples.length} samples, total: ${audioBufferRef.current.length}`);\n        \n        // Log every 100 packets to avoid spam\n        if (audioBufferRef.current.length % 16000 === 0) {\n          console.log(`🎤 Recording: ${audioBufferRef.current.length} samples captured`);\n        }\n      } else {\n        console.log(`⏸️ Audio data received but not recording (${data.length} samples)`);\n      }\n    };\n    \n    audioHandlerRef.current = handleAudioData;\n    \n    // Register the handler with the parent component\n    if (onAudioHandlerRegister) {\n      onAudioHandlerRegister(handleAudioData);\n    }\n  }, [onAudioHandlerRegister]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <Container>\n      <Title>🎤 Audio Recorder</Title>\n      \n      <Status recording={isRecording} playing={isPlaying}>\n        {isRecording && (\n          <>\n            <Mic size={20} />\n            Recording from XIAO MIC (BLE)... ({audioStreamActive ? 'Stream Active' : 'No Stream'})\n          </>\n        )}\n        {isPlaying && (\n          <>\n            <Play size={20} />\n            Playing Recording\n          </>\n        )}\n        {!isRecording && !isPlaying && audioData.length === 0 && (\n          <>\n            <Mic size={20} />\n            {audioStreamActive ? `Audio Stream Active (${packetCount} packets)` : 'Ready to Record'}\n          </>\n        )}\n        {!isRecording && !isPlaying && audioData.length > 0 && (\n          <>\n            <Square size={20} />\n            Recording Complete ({audioStreamActive ? 'Stream Active' : 'No Stream'})\n          </>\n        )}\n      </Status>\n\n      {isRecording && (\n        <Timer>\n          {formatTime(recordingDuration)}\n        </Timer>\n      )}\n\n      <ButtonGroup>\n        {!isRecording ? (\n          <Button onClick={startRecording} disabled={!isConnected}>\n            <Mic size={20} />\n            Start Recording\n          </Button>\n        ) : (\n          <Button onClick={stopRecording} recording>\n            <Square size={20} />\n            Stop Recording\n          </Button>\n        )}\n\n        {recordedAudio && (\n          <>\n            {!isPlaying ? (\n              <Button onClick={playRecording}>\n                <Play size={20} />\n                Play\n              </Button>\n            ) : (\n              <Button onClick={pauseRecording} playing>\n                <Pause size={20} />\n                Pause\n              </Button>\n            )}\n            \n            <Button onClick={downloadRecording}>\n              <Download size={20} />\n              Download\n            </Button>\n          </>\n        )}\n      </ButtonGroup>\n\n      <AudioInfo>\n        <strong>Audio Stream Info:</strong><br />\n        Stream Active: {audioStreamActive ? 'Yes' : 'No'}<br />\n        Packets Received: {packetCount.toLocaleString()}<br />\n        {audioData.length > 0 && (\n          <>\n            <br /><strong>Recording Info:</strong><br />\n            Duration: {formatTime(recordingDuration)}<br />\n            Samples: {audioData.length.toLocaleString()}<br />\n            Sample Rate: {SAMPLE_RATE} Hz<br />\n            Channels: {CHANNELS}<br />\n            Size: {(audioData.length * 2 / 1024).toFixed(1)} KB\n          </>\n        )}\n      </AudioInfo>\n    </Container>\n  );\n};\n\nexport default AudioRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}