{"ast":null,"code":"import { convertProtocolToWs } from \"./helpers\";\nimport { isBrowser, isBun, isNode, NODE_VERSION, BUN_VERSION, BROWSER_AGENT } from \"./runtime\";\nimport { version } from \"./version\";\nconst getAgent = () => {\n  if (isNode()) {\n    return \"node/\".concat(NODE_VERSION);\n  } else if (isBun()) {\n    return \"bun/\".concat(BUN_VERSION);\n  } else if (isBrowser()) {\n    return \"javascript \".concat(BROWSER_AGENT);\n  } else {\n    return \"unknown\";\n  }\n};\nexport const DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\",\n  \"X-Client-Info\": \"@deepgram/sdk; \".concat(isBrowser() ? \"browser\" : \"server\", \"; v\").concat(version),\n  \"User-Agent\": \"@deepgram/sdk/\".concat(version, \" \").concat(getAgent())\n};\nexport const DEFAULT_URL = \"https://api.deepgram.com\";\nexport const DEFAULT_AGENT_URL = \"wss://agent.deepgram.com\";\nexport const DEFAULT_GLOBAL_OPTIONS = {\n  fetch: {\n    options: {\n      url: DEFAULT_URL,\n      headers: DEFAULT_HEADERS\n    }\n  },\n  websocket: {\n    options: {\n      url: convertProtocolToWs(DEFAULT_URL),\n      _nodeOnlyHeaders: DEFAULT_HEADERS\n    }\n  }\n};\nexport const DEFAULT_AGENT_OPTIONS = {\n  fetch: {\n    options: {\n      url: DEFAULT_URL,\n      headers: DEFAULT_HEADERS\n    }\n  },\n  websocket: {\n    options: {\n      url: DEFAULT_AGENT_URL,\n      _nodeOnlyHeaders: DEFAULT_HEADERS\n    }\n  }\n};\nexport const DEFAULT_OPTIONS = {\n  global: DEFAULT_GLOBAL_OPTIONS,\n  agent: DEFAULT_AGENT_OPTIONS\n};\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n  SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n  SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n  SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n  SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n  CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n  CONNECTION_STATE[\"Open\"] = \"open\";\n  CONNECTION_STATE[\"Closing\"] = \"closing\";\n  CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));","map":{"version":3,"names":["convertProtocolToWs","isBrowser","isBun","isNode","NODE_VERSION","BUN_VERSION","BROWSER_AGENT","version","getAgent","concat","DEFAULT_HEADERS","DEFAULT_URL","DEFAULT_AGENT_URL","DEFAULT_GLOBAL_OPTIONS","fetch","options","url","headers","websocket","_nodeOnlyHeaders","DEFAULT_AGENT_OPTIONS","DEFAULT_OPTIONS","global","agent","SOCKET_STATES","CONNECTION_STATE"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@deepgram/sdk/src/lib/constants.ts"],"sourcesContent":["import { convertProtocolToWs } from \"./helpers\";\nimport { isBrowser, isBun, isNode, NODE_VERSION, BUN_VERSION, BROWSER_AGENT } from \"./runtime\";\nimport { version } from \"./version\";\nimport type { DefaultNamespaceOptions, DefaultClientOptions } from \"./types\";\n\nconst getAgent = () => {\n  if (isNode()) {\n    return `node/${NODE_VERSION}`;\n  } else if (isBun()) {\n    return `bun/${BUN_VERSION}`;\n  } else if (isBrowser()) {\n    return `javascript ${BROWSER_AGENT}`;\n  } else {\n    return `unknown`;\n  }\n};\n\nexport const DEFAULT_HEADERS = {\n  \"Content-Type\": `application/json`,\n  \"X-Client-Info\": `@deepgram/sdk; ${isBrowser() ? \"browser\" : \"server\"}; v${version}`,\n  \"User-Agent\": `@deepgram/sdk/${version} ${getAgent()}`,\n};\n\nexport const DEFAULT_URL = \"https://api.deepgram.com\";\nexport const DEFAULT_AGENT_URL = \"wss://agent.deepgram.com\";\n\nexport const DEFAULT_GLOBAL_OPTIONS: Partial<DefaultNamespaceOptions> = {\n  fetch: { options: { url: DEFAULT_URL, headers: DEFAULT_HEADERS } },\n  websocket: {\n    options: { url: convertProtocolToWs(DEFAULT_URL), _nodeOnlyHeaders: DEFAULT_HEADERS },\n  },\n};\n\nexport const DEFAULT_AGENT_OPTIONS: Partial<DefaultNamespaceOptions> = {\n  fetch: { options: { url: DEFAULT_URL, headers: DEFAULT_HEADERS } },\n  websocket: {\n    options: { url: DEFAULT_AGENT_URL, _nodeOnlyHeaders: DEFAULT_HEADERS },\n  },\n};\n\nexport const DEFAULT_OPTIONS: DefaultClientOptions = {\n  global: DEFAULT_GLOBAL_OPTIONS,\n  agent: DEFAULT_AGENT_OPTIONS,\n};\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = \"connecting\",\n  Open = \"open\",\n  Closing = \"closing\",\n  Closed = \"closed\",\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,WAAW;AAC/C,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAEC,WAAW,EAAEC,aAAa,QAAQ,WAAW;AAC9F,SAASC,OAAO,QAAQ,WAAW;AAGnC,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EACpB,IAAIL,MAAM,EAAE,EAAE;IACZ,eAAAM,MAAA,CAAeL,YAAY;GAC5B,MAAM,IAAIF,KAAK,EAAE,EAAE;IAClB,cAAAO,MAAA,CAAcJ,WAAW;GAC1B,MAAM,IAAIJ,SAAS,EAAE,EAAE;IACtB,qBAAAQ,MAAA,CAAqBH,aAAa;GACnC,MAAM;IACL;;AAEJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG;EAC7B,cAAc,oBAAoB;EAClC,eAAe,oBAAAD,MAAA,CAAoBR,SAAS,EAAE,GAAG,SAAS,GAAG,QAAQ,SAAAQ,MAAA,CAAMF,OAAO,CAAE;EACpF,YAAY,mBAAAE,MAAA,CAAmBF,OAAO,OAAAE,MAAA,CAAID,QAAQ,EAAE;CACrD;AAED,OAAO,MAAMG,WAAW,GAAG,0BAA0B;AACrD,OAAO,MAAMC,iBAAiB,GAAG,0BAA0B;AAE3D,OAAO,MAAMC,sBAAsB,GAAqC;EACtEC,KAAK,EAAE;IAAEC,OAAO,EAAE;MAAEC,GAAG,EAAEL,WAAW;MAAEM,OAAO,EAAEP;IAAe;EAAE,CAAE;EAClEQ,SAAS,EAAE;IACTH,OAAO,EAAE;MAAEC,GAAG,EAAEhB,mBAAmB,CAACW,WAAW,CAAC;MAAEQ,gBAAgB,EAAET;IAAe;;CAEtF;AAED,OAAO,MAAMU,qBAAqB,GAAqC;EACrEN,KAAK,EAAE;IAAEC,OAAO,EAAE;MAAEC,GAAG,EAAEL,WAAW;MAAEM,OAAO,EAAEP;IAAe;EAAE,CAAE;EAClEQ,SAAS,EAAE;IACTH,OAAO,EAAE;MAAEC,GAAG,EAAEJ,iBAAiB;MAAEO,gBAAgB,EAAET;IAAe;;CAEvE;AAED,OAAO,MAAMW,eAAe,GAAyB;EACnDC,MAAM,EAAET,sBAAsB;EAC9BU,KAAK,EAAEH;CACR;AAED,WAAYI,aAKX;AALD,WAAYA,aAAa;EACvBA,aAAA,CAAAA,aAAA,kCAAc;EACdA,aAAA,CAAAA,aAAA,sBAAQ;EACRA,aAAA,CAAAA,aAAA,4BAAW;EACXA,aAAA,CAAAA,aAAA,0BAAU;AACZ,CAAC,EALWA,aAAa,KAAbA,aAAa;AAOzB,WAAYC,gBAKX;AALD,WAAYA,gBAAgB;EAC1BA,gBAAA,6BAAyB;EACzBA,gBAAA,iBAAa;EACbA,gBAAA,uBAAmB;EACnBA,gBAAA,qBAAiB;AACnB,CAAC,EALWA,gBAAgB,KAAhBA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}