{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0;import React,{useState,useRef,useCallback,useEffect}from'react';import styled from'styled-components';import{createClient,LiveTranscriptionEvents}from'@deepgram/sdk';import{FileText,Mic,MicOff,Copy,Trash2}from'lucide-react';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 20px;\\n  padding: 2rem;\\n  margin: 1rem;\\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n\"])));const Title=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n\"])));const Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  padding: 1rem 1.5rem;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 0.5rem;\\n\\n  &:hover {\\n    background: \",\";\\n    transform: translateY(-2px);\\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: none;\\n  }\\n\"])),props=>{if(props.active)return'#e74c3c';if(props.secondary)return'#6c757d';return'#667eea';},props=>{if(props.active)return'#c0392b';if(props.secondary)return'#5a6268';return'#5a67d8';});const ButtonGroup=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  gap: 1rem;\\n  flex-wrap: wrap;\\n  margin: 2rem 0;\\n\"])));const Status=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  border-radius: 12px;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  justify-content: center;\\n\"])),props=>{if(props.active)return'#fdf2f2';if(props.error)return'#fdf2f2';return'#f8f9fa';},props=>{if(props.active)return'#e74c3c';if(props.error)return'#e74c3c';return'#666';});const TranscriptionBox=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background: #f8f9fa;\\n  border-radius: 12px;\\n  padding: 1.5rem;\\n  margin: 1rem 0;\\n  min-height: 200px;\\n  max-height: 400px;\\n  overflow-y: auto;\\n  font-size: 1rem;\\n  line-height: 1.6;\\n  color: #333;\\n  border: 2px solid #e9ecef;\\n  transition: border-color 0.3s ease;\\n\\n  &:focus-within {\\n    border-color: #667eea;\\n  }\\n\"])));const TranscriptionText=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n  margin-bottom: 1rem;\\n\"])));const LiveText=styled.span(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: rgba(102, 126, 234, 0.1);\\n  padding: 2px 4px;\\n  border-radius: 4px;\\n  color: #667eea;\\n  font-weight: 500;\\n\"])));const Controls=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-top: 1rem;\\n  padding-top: 1rem;\\n  border-top: 1px solid #e9ecef;\\n\"])));const Stats=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 0.9rem;\\n  color: #666;\\n  font-family: monospace;\\n\"])));const DeepgramTranscriber=_ref=>{let{isConnected,audioData}=_ref;const[isTranscribing,setIsTranscribing]=useState(false);const[transcription,setTranscription]=useState('');const[liveText,setLiveText]=useState('');const[isDeepgramConnected,setIsDeepgramConnected]=useState(false);const[error,setError]=useState(null);const[stats,setStats]=useState({words:0,characters:0,duration:0});const[audioPacketsSent,setAudioPacketsSent]=useState(0);const deepgramRef=useRef(null);const startTimeRef=useRef(null);// Deepgram API Key\nconst DEEPGRAM_API_KEY='6f8cc0568676f91acc28784457aea240539e9aab';// Test API key validity\nuseEffect(()=>{if(DEEPGRAM_API_KEY){console.log('🔑 Deepgram API Key loaded:',DEEPGRAM_API_KEY.substring(0,8)+'...');}else{console.error('❌ No Deepgram API Key found');setError('No Deepgram API Key configured');}},[]);const initializeDeepgram=useCallback(()=>{const deepgram=createClient(DEEPGRAM_API_KEY);const connection=deepgram.listen.live({model:'nova-3',// Use the latest model\nlanguage:'en-US',smart_format:true,interim_results:true,endpointing:300,utterance_end_ms:1000,vad_events:true,encoding:'linear16',// Specify the audio encoding for 16-bit PCM\nsample_rate:16000,// Match the firmware sample rate\nchannels:1// Mono audio\n});connection.on(LiveTranscriptionEvents.Open,()=>{console.log('✅ Deepgram connection opened successfully');setIsDeepgramConnected(true);setError(null);});connection.on(LiveTranscriptionEvents.Transcript,data=>{var _data$channel,_data$channel$alterna,_data$channel$alterna2;console.log('📝 Deepgram transcript received:',data);const transcript=(_data$channel=data.channel)===null||_data$channel===void 0?void 0:(_data$channel$alterna=_data$channel.alternatives)===null||_data$channel$alterna===void 0?void 0:(_data$channel$alterna2=_data$channel$alterna[0])===null||_data$channel$alterna2===void 0?void 0:_data$channel$alterna2.transcript;if(transcript&&transcript.trim()){console.log(\"\\uD83C\\uDFAF Transcript: \\\"\".concat(transcript,\"\\\" (final: \").concat(data.is_final,\")\"));if(data.is_final){// Final transcript\nsetTranscription(prev=>prev+transcript+' ');setLiveText('');// Update stats\nsetStats(prev=>({words:prev.words+transcript.split(' ').length,characters:prev.characters+transcript.length,duration:(Date.now()-startTimeRef.current)/1000}));}else{// Interim result\nsetLiveText(transcript);}}else{console.log('⚠️ Empty or no transcript received');}});connection.on(LiveTranscriptionEvents.Error,error=>{console.error('❌ Deepgram error:',error);setError(error.message||'Transcription error');setIsTranscribing(false);setIsDeepgramConnected(false);});connection.on(LiveTranscriptionEvents.Close,()=>{console.log('Deepgram connection closed');setIsDeepgramConnected(false);setIsTranscribing(false);});deepgramRef.current=connection;return connection;},[]);const startTranscription=useCallback(()=>{if(!isConnected){alert('Please connect to XIAO board first');return;}try{console.log('🎯 Starting transcription...');const connection=initializeDeepgram();setIsTranscribing(true);setTranscription('');setLiveText('');setError(null);startTimeRef.current=Date.now();setAudioPacketsSent(0);console.log('✅ Transcription started, waiting for audio data...');}catch(err){console.error('❌ Failed to start transcription:',err);setError(err.message);}},[isConnected,initializeDeepgram]);const stopTranscription=useCallback(()=>{if(deepgramRef.current){deepgramRef.current.finish();deepgramRef.current=null;}setIsTranscribing(false);setIsDeepgramConnected(false);},[]);const clearTranscription=useCallback(()=>{setTranscription('');setLiveText('');setStats({words:0,characters:0,duration:0});},[]);const copyTranscription=useCallback(async()=>{try{await navigator.clipboard.writeText(transcription.trim());// Could add a toast notification here\n}catch(err){console.error('Failed to copy text:',err);}},[transcription]);// Handle real-time audio data from BLE (continuous stream)\nuseEffect(()=>{if(audioData&&isTranscribing&&deepgramRef.current&&isDeepgramConnected){// The firmware sends 160 samples every 10ms continuously\n// Deepgram expects raw PCM data as Uint8Array\nconst buffer=new ArrayBuffer(audioData.length*2);const view=new DataView(buffer);for(let i=0;i<audioData.length;i++){view.setInt16(i*2,audioData[i],true);}// Convert to Uint8Array for Deepgram\nconst uint8Array=new Uint8Array(buffer);// Send audio data to Deepgram in real-time\ntry{deepgramRef.current.send(uint8Array);// Track packets sent\nsetAudioPacketsSent(prev=>prev+1);// Log every 100 packets to avoid spam\nif(Math.random()<0.01){// 1% chance to log\nconsole.log(\"\\uD83C\\uDFB5 Transcribing XIAO MIC: sent \".concat(audioData.length,\" samples (\").concat(uint8Array.length,\" bytes) to Deepgram\"));console.log(\"   \\uD83C\\uDFA4 Source: XIAO Board microphone (NOT laptop mic)\");console.log(\"   First few samples: [\".concat(audioData.slice(0,5).join(', '),\"]\"));console.log(\"   Audio range: \".concat(Math.min(...audioData),\" to \").concat(Math.max(...audioData)));console.log(\"   Deepgram connected: \".concat(isDeepgramConnected));}}catch(error){console.error('❌ Error sending audio to Deepgram:',error);setError('Failed to send audio to Deepgram: '+error.message);}}else if(audioData&&isTranscribing&&!isDeepgramConnected){console.log('⚠️ Audio data received but Deepgram not connected yet');}},[audioData,isTranscribing,isDeepgramConnected]);// Cleanup on unmount\nuseEffect(()=>{return()=>{if(deepgramRef.current){deepgramRef.current.finish();}};},[]);const formatDuration=seconds=>{const mins=Math.floor(seconds/60);const secs=Math.floor(seconds%60);return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83C\\uDFAF Deepgram Transcription\"}),/*#__PURE__*/_jsxs(Status,{active:isTranscribing,error:error,children:[error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FileText,{size:20}),\"Error: \",error]}),isTranscribing&&!error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Mic,{size:20}),isDeepgramConnected?'Transcribing XIAO MIC (BLE)...':'Connecting to Deepgram...']}),!isTranscribing&&!error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MicOff,{size:20}),\"Ready to Transcribe\"]})]}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[!isTranscribing?/*#__PURE__*/_jsxs(Button,{onClick:startTranscription,disabled:!isConnected,children:[/*#__PURE__*/_jsx(Mic,{size:20}),\"Start Transcription\"]}):/*#__PURE__*/_jsxs(Button,{onClick:stopTranscription,active:true,children:[/*#__PURE__*/_jsx(MicOff,{size:20}),\"Stop Transcription\"]}),/*#__PURE__*/_jsxs(Button,{onClick:copyTranscription,disabled:!transcription.trim(),secondary:true,children:[/*#__PURE__*/_jsx(Copy,{size:20}),\"Copy Text\"]}),/*#__PURE__*/_jsxs(Button,{onClick:clearTranscription,disabled:!transcription.trim(),secondary:true,children:[/*#__PURE__*/_jsx(Trash2,{size:20}),\"Clear\"]})]}),/*#__PURE__*/_jsx(TranscriptionBox,{children:/*#__PURE__*/_jsxs(TranscriptionText,{children:[transcription,liveText&&/*#__PURE__*/_jsx(LiveText,{children:liveText})]})}),/*#__PURE__*/_jsx(Controls,{children:/*#__PURE__*/_jsxs(Stats,{children:[\"Words: \",stats.words,\" | Characters: \",stats.characters,\" | Duration: \",formatDuration(stats.duration),\" | Audio Packets: \",audioPacketsSent]})})]});};export default DeepgramTranscriber;","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","createClient","LiveTranscriptionEvents","FileText","Mic","MicOff","Copy","Trash2","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Button","button","_templateObject3","props","active","secondary","ButtonGroup","_templateObject4","Status","_templateObject5","error","TranscriptionBox","_templateObject6","TranscriptionText","_templateObject7","LiveText","span","_templateObject8","Controls","_templateObject9","Stats","_templateObject0","DeepgramTranscriber","_ref","isConnected","audioData","isTranscribing","setIsTranscribing","transcription","setTranscription","liveText","setLiveText","isDeepgramConnected","setIsDeepgramConnected","setError","stats","setStats","words","characters","duration","audioPacketsSent","setAudioPacketsSent","deepgramRef","startTimeRef","DEEPGRAM_API_KEY","console","log","substring","initializeDeepgram","deepgram","connection","listen","live","model","language","smart_format","interim_results","endpointing","utterance_end_ms","vad_events","encoding","sample_rate","channels","on","Open","Transcript","data","_data$channel","_data$channel$alterna","_data$channel$alterna2","transcript","channel","alternatives","trim","concat","is_final","prev","split","length","Date","now","current","Error","message","Close","startTranscription","alert","err","stopTranscription","finish","clearTranscription","copyTranscription","navigator","clipboard","writeText","buffer","ArrayBuffer","view","DataView","i","setInt16","uint8Array","Uint8Array","send","Math","random","slice","join","min","max","formatDuration","seconds","mins","floor","secs","toString","padStart","children","size","onClick","disabled"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/DeepgramTranscriber.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { createClient, LiveTranscriptionEvents } from '@deepgram/sdk';\nimport { FileText, Mic, MicOff, Copy, Trash2 } from 'lucide-react';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  background: ${props => {\n    if (props.active) return '#e74c3c';\n    if (props.secondary) return '#6c757d';\n    return '#667eea';\n  }};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem;\n\n  &:hover {\n    background: ${props => {\n      if (props.active) return '#c0392b';\n      if (props.secondary) return '#5a6268';\n      return '#5a67d8';\n    }};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin: 2rem 0;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => {\n    if (props.active) return '#fdf2f2';\n    if (props.error) return '#fdf2f2';\n    return '#f8f9fa';\n  }};\n  color: ${props => {\n    if (props.active) return '#e74c3c';\n    if (props.error) return '#e74c3c';\n    return '#666';\n  }};\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst TranscriptionBox = styled.div`\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin: 1rem 0;\n  min-height: 200px;\n  max-height: 400px;\n  overflow-y: auto;\n  font-size: 1rem;\n  line-height: 1.6;\n  color: #333;\n  border: 2px solid #e9ecef;\n  transition: border-color 0.3s ease;\n\n  &:focus-within {\n    border-color: #667eea;\n  }\n`;\n\nconst TranscriptionText = styled.div`\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin-bottom: 1rem;\n`;\n\nconst LiveText = styled.span`\n  background: rgba(102, 126, 234, 0.1);\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: #667eea;\n  font-weight: 500;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Stats = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  font-family: monospace;\n`;\n\nconst DeepgramTranscriber = ({ isConnected, audioData }) => {\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [liveText, setLiveText] = useState('');\n  const [isDeepgramConnected, setIsDeepgramConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState({ words: 0, characters: 0, duration: 0 });\n  const [audioPacketsSent, setAudioPacketsSent] = useState(0);\n\n  const deepgramRef = useRef(null);\n  const startTimeRef = useRef(null);\n\n  // Deepgram API Key\n  const DEEPGRAM_API_KEY = '6f8cc0568676f91acc28784457aea240539e9aab';\n  \n  // Test API key validity\n  useEffect(() => {\n    if (DEEPGRAM_API_KEY) {\n      console.log('🔑 Deepgram API Key loaded:', DEEPGRAM_API_KEY.substring(0, 8) + '...');\n    } else {\n      console.error('❌ No Deepgram API Key found');\n      setError('No Deepgram API Key configured');\n    }\n  }, []);\n\n  const initializeDeepgram = useCallback(() => {\n    const deepgram = createClient(DEEPGRAM_API_KEY);\n    \n    const connection = deepgram.listen.live({\n      model: 'nova-3',       // Use the latest model\n      language: 'en-US',\n      smart_format: true,\n      interim_results: true,\n      endpointing: 300,\n      utterance_end_ms: 1000,\n      vad_events: true,\n      encoding: 'linear16',  // Specify the audio encoding for 16-bit PCM\n      sample_rate: 16000,    // Match the firmware sample rate\n      channels: 1,           // Mono audio\n    });\n\n    connection.on(LiveTranscriptionEvents.Open, () => {\n      console.log('✅ Deepgram connection opened successfully');\n      setIsDeepgramConnected(true);\n      setError(null);\n    });\n\n    connection.on(LiveTranscriptionEvents.Transcript, (data) => {\n      console.log('📝 Deepgram transcript received:', data);\n      const transcript = data.channel?.alternatives?.[0]?.transcript;\n      \n      if (transcript && transcript.trim()) {\n        console.log(`🎯 Transcript: \"${transcript}\" (final: ${data.is_final})`);\n        \n        if (data.is_final) {\n          // Final transcript\n          setTranscription(prev => prev + transcript + ' ');\n          setLiveText('');\n          \n          // Update stats\n          setStats(prev => ({\n            words: prev.words + transcript.split(' ').length,\n            characters: prev.characters + transcript.length,\n            duration: (Date.now() - startTimeRef.current) / 1000\n          }));\n        } else {\n          // Interim result\n          setLiveText(transcript);\n        }\n      } else {\n        console.log('⚠️ Empty or no transcript received');\n      }\n    });\n\n    connection.on(LiveTranscriptionEvents.Error, (error) => {\n      console.error('❌ Deepgram error:', error);\n      setError(error.message || 'Transcription error');\n      setIsTranscribing(false);\n      setIsDeepgramConnected(false);\n    });\n\n    connection.on(LiveTranscriptionEvents.Close, () => {\n      console.log('Deepgram connection closed');\n      setIsDeepgramConnected(false);\n      setIsTranscribing(false);\n    });\n\n    deepgramRef.current = connection;\n    return connection;\n  }, []);\n\n  const startTranscription = useCallback(() => {\n    if (!isConnected) {\n      alert('Please connect to XIAO board first');\n      return;\n    }\n\n    try {\n      console.log('🎯 Starting transcription...');\n      const connection = initializeDeepgram();\n      setIsTranscribing(true);\n      setTranscription('');\n      setLiveText('');\n      setError(null);\n      startTimeRef.current = Date.now();\n      setAudioPacketsSent(0);\n      \n      console.log('✅ Transcription started, waiting for audio data...');\n    } catch (err) {\n      console.error('❌ Failed to start transcription:', err);\n      setError(err.message);\n    }\n  }, [isConnected, initializeDeepgram]);\n\n  const stopTranscription = useCallback(() => {\n    if (deepgramRef.current) {\n      deepgramRef.current.finish();\n      deepgramRef.current = null;\n    }\n    setIsTranscribing(false);\n    setIsDeepgramConnected(false);\n  }, []);\n\n  const clearTranscription = useCallback(() => {\n    setTranscription('');\n    setLiveText('');\n    setStats({ words: 0, characters: 0, duration: 0 });\n  }, []);\n\n  const copyTranscription = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(transcription.trim());\n      // Could add a toast notification here\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n    }\n  }, [transcription]);\n\n  // Handle real-time audio data from BLE (continuous stream)\n  useEffect(() => {\n    if (audioData && isTranscribing && deepgramRef.current && isDeepgramConnected) {\n      // The firmware sends 160 samples every 10ms continuously\n      // Deepgram expects raw PCM data as Uint8Array\n      const buffer = new ArrayBuffer(audioData.length * 2);\n      const view = new DataView(buffer);\n      for (let i = 0; i < audioData.length; i++) {\n        view.setInt16(i * 2, audioData[i], true);\n      }\n      \n      // Convert to Uint8Array for Deepgram\n      const uint8Array = new Uint8Array(buffer);\n      \n      // Send audio data to Deepgram in real-time\n      try {\n        deepgramRef.current.send(uint8Array);\n        \n        // Track packets sent\n        setAudioPacketsSent(prev => prev + 1);\n        \n        // Log every 100 packets to avoid spam\n        if (Math.random() < 0.01) { // 1% chance to log\n          console.log(`🎵 Transcribing XIAO MIC: sent ${audioData.length} samples (${uint8Array.length} bytes) to Deepgram`);\n          console.log(`   🎤 Source: XIAO Board microphone (NOT laptop mic)`);\n          console.log(`   First few samples: [${audioData.slice(0, 5).join(', ')}]`);\n          console.log(`   Audio range: ${Math.min(...audioData)} to ${Math.max(...audioData)}`);\n          console.log(`   Deepgram connected: ${isDeepgramConnected}`);\n        }\n      } catch (error) {\n        console.error('❌ Error sending audio to Deepgram:', error);\n        setError('Failed to send audio to Deepgram: ' + error.message);\n      }\n    } else if (audioData && isTranscribing && !isDeepgramConnected) {\n      console.log('⚠️ Audio data received but Deepgram not connected yet');\n    }\n  }, [audioData, isTranscribing, isDeepgramConnected]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (deepgramRef.current) {\n        deepgramRef.current.finish();\n      }\n    };\n  }, []);\n\n  const formatDuration = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <Container>\n      <Title>🎯 Deepgram Transcription</Title>\n      \n      <Status active={isTranscribing} error={error}>\n        {error && (\n          <>\n            <FileText size={20} />\n            Error: {error}\n          </>\n        )}\n        {isTranscribing && !error && (\n          <>\n            <Mic size={20} />\n            {isDeepgramConnected ? 'Transcribing XIAO MIC (BLE)...' : 'Connecting to Deepgram...'}\n          </>\n        )}\n        {!isTranscribing && !error && (\n          <>\n            <MicOff size={20} />\n            Ready to Transcribe\n          </>\n        )}\n      </Status>\n\n      <ButtonGroup>\n        {!isTranscribing ? (\n          <Button onClick={startTranscription} disabled={!isConnected}>\n            <Mic size={20} />\n            Start Transcription\n          </Button>\n        ) : (\n          <Button onClick={stopTranscription} active>\n            <MicOff size={20} />\n            Stop Transcription\n          </Button>\n        )}\n        \n        <Button onClick={copyTranscription} disabled={!transcription.trim()} secondary>\n          <Copy size={20} />\n          Copy Text\n        </Button>\n        \n        <Button onClick={clearTranscription} disabled={!transcription.trim()} secondary>\n          <Trash2 size={20} />\n          Clear\n        </Button>\n      </ButtonGroup>\n\n      <TranscriptionBox>\n        <TranscriptionText>\n          {transcription}\n          {liveText && <LiveText>{liveText}</LiveText>}\n        </TranscriptionText>\n      </TranscriptionBox>\n\n      <Controls>\n        <Stats>\n          Words: {stats.words} | Characters: {stats.characters} | Duration: {formatDuration(stats.duration)} | Audio Packets: {audioPacketsSent}\n        </Stats>\n      </Controls>\n    </Container>\n  );\n};\n\nexport default DeepgramTranscriber;\n"],"mappings":"sUAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CACvE,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,YAAY,CAAEC,uBAAuB,KAAQ,eAAe,CACrE,OAASC,QAAQ,CAAEC,GAAG,CAAEC,MAAM,CAAEC,IAAI,CAAEC,MAAM,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnE,KAAM,CAAAC,SAAS,CAAGd,MAAM,CAACe,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,6OAQ3B,CAED,KAAM,CAAAC,KAAK,CAAGlB,MAAM,CAACmB,EAAE,CAAAC,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,sHAMtB,CAED,KAAM,CAAAI,MAAM,CAAGrB,MAAM,CAACsB,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,2gBACZO,KAAK,EAAI,CACrB,GAAIA,KAAK,CAACC,MAAM,CAAE,MAAO,SAAS,CAClC,GAAID,KAAK,CAACE,SAAS,CAAE,MAAO,SAAS,CACrC,MAAO,SAAS,CAClB,CAAC,CAeeF,KAAK,EAAI,CACrB,GAAIA,KAAK,CAACC,MAAM,CAAE,MAAO,SAAS,CAClC,GAAID,KAAK,CAACE,SAAS,CAAE,MAAO,SAAS,CACrC,MAAO,SAAS,CAClB,CAAC,CAWJ,CAED,KAAM,CAAAC,WAAW,CAAG3B,MAAM,CAACe,GAAG,CAAAa,gBAAA,GAAAA,gBAAA,CAAAX,sBAAA,6GAM7B,CAED,KAAM,CAAAY,MAAM,CAAG7B,MAAM,CAACe,GAAG,CAAAe,gBAAA,GAAAA,gBAAA,CAAAb,sBAAA,qNAOTO,KAAK,EAAI,CACrB,GAAIA,KAAK,CAACC,MAAM,CAAE,MAAO,SAAS,CAClC,GAAID,KAAK,CAACO,KAAK,CAAE,MAAO,SAAS,CACjC,MAAO,SAAS,CAClB,CAAC,CACQP,KAAK,EAAI,CAChB,GAAIA,KAAK,CAACC,MAAM,CAAE,MAAO,SAAS,CAClC,GAAID,KAAK,CAACO,KAAK,CAAE,MAAO,SAAS,CACjC,MAAO,MAAM,CACf,CAAC,CAGF,CAED,KAAM,CAAAC,gBAAgB,CAAGhC,MAAM,CAACe,GAAG,CAAAkB,gBAAA,GAAAA,gBAAA,CAAAhB,sBAAA,uVAiBlC,CAED,KAAM,CAAAiB,iBAAiB,CAAGlC,MAAM,CAACe,GAAG,CAAAoB,gBAAA,GAAAA,gBAAA,CAAAlB,sBAAA,sFAInC,CAED,KAAM,CAAAmB,QAAQ,CAAGpC,MAAM,CAACqC,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAArB,sBAAA,uIAM3B,CAED,KAAM,CAAAsB,QAAQ,CAAGvC,MAAM,CAACe,GAAG,CAAAyB,gBAAA,GAAAA,gBAAA,CAAAvB,sBAAA,oKAO1B,CAED,KAAM,CAAAwB,KAAK,CAAGzC,MAAM,CAACe,GAAG,CAAA2B,gBAAA,GAAAA,gBAAA,CAAAzB,sBAAA,2EAIvB,CAED,KAAM,CAAA0B,mBAAmB,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,WAAW,CAAEC,SAAU,CAAC,CAAAF,IAAA,CACrD,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGpD,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACqD,aAAa,CAAEC,gBAAgB,CAAC,CAAGtD,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACuD,QAAQ,CAAEC,WAAW,CAAC,CAAGxD,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACyD,mBAAmB,CAAEC,sBAAsB,CAAC,CAAG1D,QAAQ,CAAC,KAAK,CAAC,CACrE,KAAM,CAACmC,KAAK,CAAEwB,QAAQ,CAAC,CAAG3D,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC4D,KAAK,CAAEC,QAAQ,CAAC,CAAG7D,QAAQ,CAAC,CAAE8D,KAAK,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAC,CAAEC,QAAQ,CAAE,CAAE,CAAC,CAAC,CAC5E,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlE,QAAQ,CAAC,CAAC,CAAC,CAE3D,KAAM,CAAAmE,WAAW,CAAGlE,MAAM,CAAC,IAAI,CAAC,CAChC,KAAM,CAAAmE,YAAY,CAAGnE,MAAM,CAAC,IAAI,CAAC,CAEjC;AACA,KAAM,CAAAoE,gBAAgB,CAAG,0CAA0C,CAEnE;AACAlE,SAAS,CAAC,IAAM,CACd,GAAIkE,gBAAgB,CAAE,CACpBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEF,gBAAgB,CAACG,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAG,KAAK,CAAC,CACtF,CAAC,IAAM,CACLF,OAAO,CAACnC,KAAK,CAAC,6BAA6B,CAAC,CAC5CwB,QAAQ,CAAC,gCAAgC,CAAC,CAC5C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAc,kBAAkB,CAAGvE,WAAW,CAAC,IAAM,CAC3C,KAAM,CAAAwE,QAAQ,CAAGrE,YAAY,CAACgE,gBAAgB,CAAC,CAE/C,KAAM,CAAAM,UAAU,CAAGD,QAAQ,CAACE,MAAM,CAACC,IAAI,CAAC,CACtCC,KAAK,CAAE,QAAQ,CAAQ;AACvBC,QAAQ,CAAE,OAAO,CACjBC,YAAY,CAAE,IAAI,CAClBC,eAAe,CAAE,IAAI,CACrBC,WAAW,CAAE,GAAG,CAChBC,gBAAgB,CAAE,IAAI,CACtBC,UAAU,CAAE,IAAI,CAChBC,QAAQ,CAAE,UAAU,CAAG;AACvBC,WAAW,CAAE,KAAK,CAAK;AACvBC,QAAQ,CAAE,CAAa;AACzB,CAAC,CAAC,CAEFZ,UAAU,CAACa,EAAE,CAAClF,uBAAuB,CAACmF,IAAI,CAAE,IAAM,CAChDnB,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CACxDb,sBAAsB,CAAC,IAAI,CAAC,CAC5BC,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,CAEFgB,UAAU,CAACa,EAAE,CAAClF,uBAAuB,CAACoF,UAAU,CAAGC,IAAI,EAAK,KAAAC,aAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAC1DxB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEoB,IAAI,CAAC,CACrD,KAAM,CAAAI,UAAU,EAAAH,aAAA,CAAGD,IAAI,CAACK,OAAO,UAAAJ,aAAA,kBAAAC,qBAAA,CAAZD,aAAA,CAAcK,YAAY,UAAAJ,qBAAA,kBAAAC,sBAAA,CAA1BD,qBAAA,CAA6B,CAAC,CAAC,UAAAC,sBAAA,iBAA/BA,sBAAA,CAAiCC,UAAU,CAE9D,GAAIA,UAAU,EAAIA,UAAU,CAACG,IAAI,CAAC,CAAC,CAAE,CACnC5B,OAAO,CAACC,GAAG,+BAAA4B,MAAA,CAAoBJ,UAAU,gBAAAI,MAAA,CAAaR,IAAI,CAACS,QAAQ,KAAG,CAAC,CAEvE,GAAIT,IAAI,CAACS,QAAQ,CAAE,CACjB;AACA9C,gBAAgB,CAAC+C,IAAI,EAAIA,IAAI,CAAGN,UAAU,CAAG,GAAG,CAAC,CACjDvC,WAAW,CAAC,EAAE,CAAC,CAEf;AACAK,QAAQ,CAACwC,IAAI,GAAK,CAChBvC,KAAK,CAAEuC,IAAI,CAACvC,KAAK,CAAGiC,UAAU,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAChDxC,UAAU,CAAEsC,IAAI,CAACtC,UAAU,CAAGgC,UAAU,CAACQ,MAAM,CAC/CvC,QAAQ,CAAE,CAACwC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGrC,YAAY,CAACsC,OAAO,EAAI,IAClD,CAAC,CAAC,CAAC,CACL,CAAC,IAAM,CACL;AACAlD,WAAW,CAACuC,UAAU,CAAC,CACzB,CACF,CAAC,IAAM,CACLzB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CACF,CAAC,CAAC,CAEFI,UAAU,CAACa,EAAE,CAAClF,uBAAuB,CAACqG,KAAK,CAAGxE,KAAK,EAAK,CACtDmC,OAAO,CAACnC,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzCwB,QAAQ,CAACxB,KAAK,CAACyE,OAAO,EAAI,qBAAqB,CAAC,CAChDxD,iBAAiB,CAAC,KAAK,CAAC,CACxBM,sBAAsB,CAAC,KAAK,CAAC,CAC/B,CAAC,CAAC,CAEFiB,UAAU,CAACa,EAAE,CAAClF,uBAAuB,CAACuG,KAAK,CAAE,IAAM,CACjDvC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzCb,sBAAsB,CAAC,KAAK,CAAC,CAC7BN,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAAC,CAAC,CAEFe,WAAW,CAACuC,OAAO,CAAG/B,UAAU,CAChC,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAmC,kBAAkB,CAAG5G,WAAW,CAAC,IAAM,CAC3C,GAAI,CAAC+C,WAAW,CAAE,CAChB8D,KAAK,CAAC,oCAAoC,CAAC,CAC3C,OACF,CAEA,GAAI,CACFzC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C,KAAM,CAAAI,UAAU,CAAGF,kBAAkB,CAAC,CAAC,CACvCrB,iBAAiB,CAAC,IAAI,CAAC,CACvBE,gBAAgB,CAAC,EAAE,CAAC,CACpBE,WAAW,CAAC,EAAE,CAAC,CACfG,QAAQ,CAAC,IAAI,CAAC,CACdS,YAAY,CAACsC,OAAO,CAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,CACjCvC,mBAAmB,CAAC,CAAC,CAAC,CAEtBI,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CACnE,CAAE,MAAOyC,GAAG,CAAE,CACZ1C,OAAO,CAACnC,KAAK,CAAC,kCAAkC,CAAE6E,GAAG,CAAC,CACtDrD,QAAQ,CAACqD,GAAG,CAACJ,OAAO,CAAC,CACvB,CACF,CAAC,CAAE,CAAC3D,WAAW,CAAEwB,kBAAkB,CAAC,CAAC,CAErC,KAAM,CAAAwC,iBAAiB,CAAG/G,WAAW,CAAC,IAAM,CAC1C,GAAIiE,WAAW,CAACuC,OAAO,CAAE,CACvBvC,WAAW,CAACuC,OAAO,CAACQ,MAAM,CAAC,CAAC,CAC5B/C,WAAW,CAACuC,OAAO,CAAG,IAAI,CAC5B,CACAtD,iBAAiB,CAAC,KAAK,CAAC,CACxBM,sBAAsB,CAAC,KAAK,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAyD,kBAAkB,CAAGjH,WAAW,CAAC,IAAM,CAC3CoD,gBAAgB,CAAC,EAAE,CAAC,CACpBE,WAAW,CAAC,EAAE,CAAC,CACfK,QAAQ,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAC,CAAEC,QAAQ,CAAE,CAAE,CAAC,CAAC,CACpD,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAoD,iBAAiB,CAAGlH,WAAW,CAAC,SAAY,CAChD,GAAI,CACF,KAAM,CAAAmH,SAAS,CAACC,SAAS,CAACC,SAAS,CAAClE,aAAa,CAAC6C,IAAI,CAAC,CAAC,CAAC,CACzD;AACF,CAAE,MAAOc,GAAG,CAAE,CACZ1C,OAAO,CAACnC,KAAK,CAAC,sBAAsB,CAAE6E,GAAG,CAAC,CAC5C,CACF,CAAC,CAAE,CAAC3D,aAAa,CAAC,CAAC,CAEnB;AACAlD,SAAS,CAAC,IAAM,CACd,GAAI+C,SAAS,EAAIC,cAAc,EAAIgB,WAAW,CAACuC,OAAO,EAAIjD,mBAAmB,CAAE,CAC7E;AACA;AACA,KAAM,CAAA+D,MAAM,CAAG,GAAI,CAAAC,WAAW,CAACvE,SAAS,CAACqD,MAAM,CAAG,CAAC,CAAC,CACpD,KAAM,CAAAmB,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAACH,MAAM,CAAC,CACjC,IAAK,GAAI,CAAAI,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG1E,SAAS,CAACqD,MAAM,CAAEqB,CAAC,EAAE,CAAE,CACzCF,IAAI,CAACG,QAAQ,CAACD,CAAC,CAAG,CAAC,CAAE1E,SAAS,CAAC0E,CAAC,CAAC,CAAE,IAAI,CAAC,CAC1C,CAEA;AACA,KAAM,CAAAE,UAAU,CAAG,GAAI,CAAAC,UAAU,CAACP,MAAM,CAAC,CAEzC;AACA,GAAI,CACFrD,WAAW,CAACuC,OAAO,CAACsB,IAAI,CAACF,UAAU,CAAC,CAEpC;AACA5D,mBAAmB,CAACmC,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAErC;AACA,GAAI4B,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,IAAI,CAAE,CAAE;AAC1B5D,OAAO,CAACC,GAAG,6CAAA4B,MAAA,CAAmCjD,SAAS,CAACqD,MAAM,eAAAJ,MAAA,CAAa2B,UAAU,CAACvB,MAAM,uBAAqB,CAAC,CAClHjC,OAAO,CAACC,GAAG,iEAAuD,CAAC,CACnED,OAAO,CAACC,GAAG,2BAAA4B,MAAA,CAA2BjD,SAAS,CAACiF,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,KAAG,CAAC,CAC1E9D,OAAO,CAACC,GAAG,oBAAA4B,MAAA,CAAoB8B,IAAI,CAACI,GAAG,CAAC,GAAGnF,SAAS,CAAC,SAAAiD,MAAA,CAAO8B,IAAI,CAACK,GAAG,CAAC,GAAGpF,SAAS,CAAC,CAAE,CAAC,CACrFoB,OAAO,CAACC,GAAG,2BAAA4B,MAAA,CAA2B1C,mBAAmB,CAAE,CAAC,CAC9D,CACF,CAAE,MAAOtB,KAAK,CAAE,CACdmC,OAAO,CAACnC,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1DwB,QAAQ,CAAC,oCAAoC,CAAGxB,KAAK,CAACyE,OAAO,CAAC,CAChE,CACF,CAAC,IAAM,IAAI1D,SAAS,EAAIC,cAAc,EAAI,CAACM,mBAAmB,CAAE,CAC9Da,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CACtE,CACF,CAAC,CAAE,CAACrB,SAAS,CAAEC,cAAc,CAAEM,mBAAmB,CAAC,CAAC,CAEpD;AACAtD,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACX,GAAIgE,WAAW,CAACuC,OAAO,CAAE,CACvBvC,WAAW,CAACuC,OAAO,CAACQ,MAAM,CAAC,CAAC,CAC9B,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAqB,cAAc,CAAIC,OAAO,EAAK,CAClC,KAAM,CAAAC,IAAI,CAAGR,IAAI,CAACS,KAAK,CAACF,OAAO,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAG,IAAI,CAAGV,IAAI,CAACS,KAAK,CAACF,OAAO,CAAG,EAAE,CAAC,CACrC,SAAArC,MAAA,CAAUsC,IAAI,MAAAtC,MAAA,CAAIwC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EACpD,CAAC,CAED,mBACE5H,KAAA,CAACC,SAAS,EAAA4H,QAAA,eACRjI,IAAA,CAACS,KAAK,EAAAwH,QAAA,CAAC,qCAAyB,CAAO,CAAC,cAExC7H,KAAA,CAACgB,MAAM,EAACJ,MAAM,CAAEsB,cAAe,CAAChB,KAAK,CAAEA,KAAM,CAAA2G,QAAA,EAC1C3G,KAAK,eACJlB,KAAA,CAAAF,SAAA,EAAA+H,QAAA,eACEjI,IAAA,CAACN,QAAQ,EAACwI,IAAI,CAAE,EAAG,CAAE,CAAC,UACf,CAAC5G,KAAK,EACb,CACH,CACAgB,cAAc,EAAI,CAAChB,KAAK,eACvBlB,KAAA,CAAAF,SAAA,EAAA+H,QAAA,eACEjI,IAAA,CAACL,GAAG,EAACuI,IAAI,CAAE,EAAG,CAAE,CAAC,CAChBtF,mBAAmB,CAAG,gCAAgC,CAAG,2BAA2B,EACrF,CACH,CACA,CAACN,cAAc,EAAI,CAAChB,KAAK,eACxBlB,KAAA,CAAAF,SAAA,EAAA+H,QAAA,eACEjI,IAAA,CAACJ,MAAM,EAACsI,IAAI,CAAE,EAAG,CAAE,CAAC,sBAEtB,EAAE,CACH,EACK,CAAC,cAET9H,KAAA,CAACc,WAAW,EAAA+G,QAAA,EACT,CAAC3F,cAAc,cACdlC,KAAA,CAACQ,MAAM,EAACuH,OAAO,CAAElC,kBAAmB,CAACmC,QAAQ,CAAE,CAAChG,WAAY,CAAA6F,QAAA,eAC1DjI,IAAA,CAACL,GAAG,EAACuI,IAAI,CAAE,EAAG,CAAE,CAAC,sBAEnB,EAAQ,CAAC,cAET9H,KAAA,CAACQ,MAAM,EAACuH,OAAO,CAAE/B,iBAAkB,CAACpF,MAAM,MAAAiH,QAAA,eACxCjI,IAAA,CAACJ,MAAM,EAACsI,IAAI,CAAE,EAAG,CAAE,CAAC,qBAEtB,EAAQ,CACT,cAED9H,KAAA,CAACQ,MAAM,EAACuH,OAAO,CAAE5B,iBAAkB,CAAC6B,QAAQ,CAAE,CAAC5F,aAAa,CAAC6C,IAAI,CAAC,CAAE,CAACpE,SAAS,MAAAgH,QAAA,eAC5EjI,IAAA,CAACH,IAAI,EAACqI,IAAI,CAAE,EAAG,CAAE,CAAC,YAEpB,EAAQ,CAAC,cAET9H,KAAA,CAACQ,MAAM,EAACuH,OAAO,CAAE7B,kBAAmB,CAAC8B,QAAQ,CAAE,CAAC5F,aAAa,CAAC6C,IAAI,CAAC,CAAE,CAACpE,SAAS,MAAAgH,QAAA,eAC7EjI,IAAA,CAACF,MAAM,EAACoI,IAAI,CAAE,EAAG,CAAE,CAAC,QAEtB,EAAQ,CAAC,EACE,CAAC,cAEdlI,IAAA,CAACuB,gBAAgB,EAAA0G,QAAA,cACf7H,KAAA,CAACqB,iBAAiB,EAAAwG,QAAA,EACfzF,aAAa,CACbE,QAAQ,eAAI1C,IAAA,CAAC2B,QAAQ,EAAAsG,QAAA,CAAEvF,QAAQ,CAAW,CAAC,EAC3B,CAAC,CACJ,CAAC,cAEnB1C,IAAA,CAAC8B,QAAQ,EAAAmG,QAAA,cACP7H,KAAA,CAAC4B,KAAK,EAAAiG,QAAA,EAAC,SACE,CAAClF,KAAK,CAACE,KAAK,CAAC,iBAAe,CAACF,KAAK,CAACG,UAAU,CAAC,eAAa,CAACwE,cAAc,CAAC3E,KAAK,CAACI,QAAQ,CAAC,CAAC,oBAAkB,CAACC,gBAAgB,EAChI,CAAC,CACA,CAAC,EACF,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAlB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}