{"ast":null,"code":"import _objectSpread from\"/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/Users/armeshpereira/Documents/LastAttempt/reactapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Bluetooth,BluetoothConnected,Wifi,WifiOff}from'lucide-react';import{BleClient}from'@capacitor-community/bluetooth-le';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 20px;\\n  padding: 2rem;\\n  margin: 1rem;\\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n\"])));const Title=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n\"])));const Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  padding: 1rem 2rem;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 0.5rem auto;\\n  min-width: 200px;\\n  justify-content: center;\\n\\n  &:hover {\\n    background: \",\";\\n    transform: translateY(-2px);\\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: none;\\n  }\\n\"])),props=>props.connected?'#4CAF50':'#667eea',props=>props.connected?'#45a049':'#5a67d8');const Status=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  border-radius: 12px;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: 500;\\n\"])),props=>props.connected?'#e8f5e8':'#f8f9fa',props=>props.connected?'#2e7d32':'#666');const DeviceInfo=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n  padding: 1rem;\\n  background: #f8f9fa;\\n  border-radius: 12px;\\n  font-family: monospace;\\n  font-size: 0.9rem;\\n\"])));const BLEConnection=_ref=>{let{onConnectionChange,onAudioData}=_ref;const[isConnected,setIsConnected]=useState(false);const[isConnecting,setIsConnecting]=useState(false);const[device,setDevice]=useState(null);const[error,setError]=useState(null);// Initialize Bluetooth LE on component mount\nReact.useEffect(()=>{const initializeBluetooth=async()=>{try{console.log('Checking BleClient plugin availability...');console.log('BleClient object:',BleClient);if(!BleClient){throw new Error('BleClient plugin not available');}console.log('Initializing Bluetooth LE...');// Initialize the plugin\nawait BleClient.initialize();console.log('Bluetooth LE initialized successfully');// Check if Bluetooth is enabled\nconst isEnabled=await BleClient.isEnabled();console.log('Bluetooth enabled:',isEnabled);if(!isEnabled){console.log('Bluetooth is not enabled on device');}}catch(err){console.error('Bluetooth LE initialization error:',err);setError(\"Bluetooth initialization failed: \".concat(err.message));}};initializeBluetooth();},[]);// BLE Configuration (matching auto_pitch_recorder.py)\nconst AUDIO_SERVICE_UUID=\"12345678-1234-5678-1234-567812345678\";const AUDIO_CHAR_UUID=\"12345679-1234-5678-1234-567812345678\";const scanForDevices=useCallback(async()=>{try{setIsConnecting(true);setError(null);// Ensure Bluetooth LE is initialized\ntry{await BleClient.initialize();console.log('Bluetooth LE initialized for scanning');}catch(initError){console.log('Initialization error:',initError);throw new Error('Failed to initialize Bluetooth LE');}// Check if Bluetooth is available\nconst isAvailable=await BleClient.isEnabled();if(!isAvailable){throw new Error('Bluetooth is not enabled on this device');}// Use the proper requestLEScan API for iOS\nconsole.log('Starting BLE scan using requestLEScan...');// Set up scan options - look specifically for MicStreamer\nconst scanOptions={services:[AUDIO_SERVICE_UUID],// Filter by our audio service\nname:'MicStreamer'// Look specifically for MicStreamer device\n};console.log('Scan options:',scanOptions);console.log('Looking for MicStreamer device...');// Start scanning with callback\nlet foundDevice=null;await BleClient.requestLEScan(scanOptions,result=>{console.log('Scan result:',result);const device=result.device;if(device&&device.name==='MicStreamer'){foundDevice=device;console.log('Found MicStreamer device:',device);BleClient.stopLEScan();}});// Wait for device to be found\nconst scanResult=await new Promise((resolve,reject)=>{const timeout=setTimeout(()=>{BleClient.stopLEScan();reject(new Error('No MicStreamer device found within 10 seconds. Make sure your XIAO board is powered on and advertising as \"MicStreamer\".'));},10000);// Check every 500ms if device was found\nconst checkInterval=setInterval(()=>{if(foundDevice){clearTimeout(timeout);clearInterval(checkInterval);resolve(foundDevice);}},500);});console.log('Found XIAO device:',scanResult);setDevice(scanResult);return scanResult;}catch(err){console.error('Scan error:',err);setError(err.message);return null;}},[onConnectionChange]);const connectToDevice=useCallback(async()=>{try{setIsConnecting(true);setError(null);let targetDevice=device;if(!targetDevice){targetDevice=await scanForDevices();if(!targetDevice){return;}}console.log('Connecting to device...');await BleClient.connect(targetDevice.deviceId);console.log('Connected to device');// Discover services\nconst services=await BleClient.getServices(targetDevice.deviceId);console.log('Got services:',services);// Find the audio service\nconst audioService=services.find(s=>s.uuid===AUDIO_SERVICE_UUID);if(!audioService){throw new Error('Audio service not found');}// Get characteristics for the audio service\nconst characteristics=await BleClient.getCharacteristics(targetDevice.deviceId,audioService.uuid);console.log('Got characteristics:',characteristics);// Find the audio characteristic\nconst audioCharacteristic=characteristics.find(c=>c.uuid===AUDIO_CHAR_UUID);if(!audioCharacteristic){throw new Error('Audio characteristic not found');}// Start notifications\nawait BleClient.startNotifications(targetDevice.deviceId,audioService.uuid,audioCharacteristic.uuid);console.log('Started notifications');// Store device info for later use\nsetDevice(_objectSpread(_objectSpread({},targetDevice),{},{audioService,audioCharacteristic}));// Store the stream info for audio streaming\nconst audioStream={deviceId:targetDevice.deviceId,serviceId:audioService.uuid,characteristicId:audioCharacteristic.uuid,device:targetDevice};// Handle incoming audio data\nBleClient.addListener('characteristicValueChanged',result=>{if(result.deviceId===targetDevice.deviceId&&result.characteristicId===audioCharacteristic.uuid){const data=result.value;const audioData=new Int16Array(data);// Debug: Log first few packets to see what we're getting\nif(Math.random()<0.01){// 1% chance to log\nconsole.log(\"\\uD83C\\uDFA4 XIAO MIC (BLE): received \".concat(audioData.length,\" samples, first sample: \").concat(audioData[0]));console.log(\"   \\uD83D\\uDCE1 Source: XIAO Board microphone via BLE\");console.log(\"   \\uD83D\\uDEAB NOT using laptop microphone\");}// Pass audio data and stream info to parent component\nif(onAudioData){onAudioData(audioData,audioStream);}}});setIsConnected(true);onConnectionChange(true);setError(null);}catch(err){console.error('Connection error:',err);setError(err.message);setIsConnected(false);onConnectionChange(false);}finally{setIsConnecting(false);}},[device,onConnectionChange,onAudioData,scanForDevices]);const disconnectDevice=useCallback(async()=>{try{if(device&&device.deviceId){await BleClient.disconnect(device.deviceId);}setIsConnected(false);setDevice(null);onConnectionChange(false);setError(null);}catch(err){console.error('Disconnect error:',err);setError(err.message);}},[device,onConnectionChange]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83D\\uDD17 XIAO Board Connection\"}),/*#__PURE__*/_jsx(Status,{connected:isConnected,children:isConnected?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(BluetoothConnected,{size:20}),\"Connected to \",(device===null||device===void 0?void 0:device.name)||'XIAO Board']}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Bluetooth,{size:20}),\"Not Connected\"]})}),error&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'#e74c3c',margin:'1rem 0',padding:'1rem',background:'#fdf2f2',borderRadius:'8px',fontSize:'0.9rem'},children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',gap:'1rem'},children:!isConnected?/*#__PURE__*/_jsx(Button,{onClick:connectToDevice,disabled:isConnecting,children:isConnecting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Wifi,{size:20}),\"Connecting...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Bluetooth,{size:20}),\"Connect to XIAO Board\"]})}):/*#__PURE__*/_jsxs(Button,{onClick:disconnectDevice,connected:true,children:[/*#__PURE__*/_jsx(WifiOff,{size:20}),\"Disconnect\"]})}),device&&/*#__PURE__*/_jsxs(DeviceInfo,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Device Info:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Name: \",device.name||'Unknown',/*#__PURE__*/_jsx(\"br\",{}),\"ID: \",device.deviceId,/*#__PURE__*/_jsx(\"br\",{}),\"Connected: \",isConnected?'Yes':'No']})]});};export default BLEConnection;","map":{"version":3,"names":["React","useState","useCallback","styled","Bluetooth","BluetoothConnected","Wifi","WifiOff","BleClient","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Button","button","_templateObject3","props","connected","Status","_templateObject4","DeviceInfo","_templateObject5","BLEConnection","_ref","onConnectionChange","onAudioData","isConnected","setIsConnected","isConnecting","setIsConnecting","device","setDevice","error","setError","useEffect","initializeBluetooth","console","log","Error","initialize","isEnabled","err","concat","message","AUDIO_SERVICE_UUID","AUDIO_CHAR_UUID","scanForDevices","initError","isAvailable","scanOptions","services","name","foundDevice","requestLEScan","result","stopLEScan","scanResult","Promise","resolve","reject","timeout","setTimeout","checkInterval","setInterval","clearTimeout","clearInterval","connectToDevice","targetDevice","connect","deviceId","getServices","audioService","find","s","uuid","characteristics","getCharacteristics","audioCharacteristic","c","startNotifications","_objectSpread","audioStream","serviceId","characteristicId","addListener","data","value","audioData","Int16Array","Math","random","length","disconnectDevice","disconnect","children","size","style","color","margin","padding","background","borderRadius","fontSize","display","flexDirection","gap","onClick","disabled"],"sources":["/Users/armeshpereira/Documents/LastAttempt/reactapp/src/components/BLEConnection.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Bluetooth, BluetoothConnected, Wifi, WifiOff } from 'lucide-react';\nimport { BleClient } from '@capacitor-community/bluetooth-le';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 2rem;\n  margin: 1rem;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  background: ${props => props.connected ? '#4CAF50' : '#667eea'};\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 2rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem auto;\n  min-width: 200px;\n  justify-content: center;\n\n  &:hover {\n    background: ${props => props.connected ? '#45a049' : '#5a67d8'};\n    transform: translateY(-2px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 12px;\n  background: ${props => props.connected ? '#e8f5e8' : '#f8f9fa'};\n  color: ${props => props.connected ? '#2e7d32' : '#666'};\n  font-weight: 500;\n`;\n\nconst DeviceInfo = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8f9fa;\n  border-radius: 12px;\n  font-family: monospace;\n  font-size: 0.9rem;\n`;\n\nconst BLEConnection = ({ onConnectionChange, onAudioData }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [device, setDevice] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Initialize Bluetooth LE on component mount\n  React.useEffect(() => {\n    const initializeBluetooth = async () => {\n      try {\n        console.log('Checking BleClient plugin availability...');\n        console.log('BleClient object:', BleClient);\n        \n        if (!BleClient) {\n          throw new Error('BleClient plugin not available');\n        }\n        \n        console.log('Initializing Bluetooth LE...');\n        \n        // Initialize the plugin\n        await BleClient.initialize();\n        console.log('Bluetooth LE initialized successfully');\n        \n        // Check if Bluetooth is enabled\n        const isEnabled = await BleClient.isEnabled();\n        console.log('Bluetooth enabled:', isEnabled);\n        \n        if (!isEnabled) {\n          console.log('Bluetooth is not enabled on device');\n        }\n      } catch (err) {\n        console.error('Bluetooth LE initialization error:', err);\n        setError(`Bluetooth initialization failed: ${err.message}`);\n      }\n    };\n    \n    initializeBluetooth();\n  }, []);\n\n  // BLE Configuration (matching auto_pitch_recorder.py)\n  const AUDIO_SERVICE_UUID = \"12345678-1234-5678-1234-567812345678\";\n  const AUDIO_CHAR_UUID = \"12345679-1234-5678-1234-567812345678\";\n\n  const scanForDevices = useCallback(async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n\n      // Ensure Bluetooth LE is initialized\n      try {\n        await BleClient.initialize();\n        console.log('Bluetooth LE initialized for scanning');\n      } catch (initError) {\n        console.log('Initialization error:', initError);\n        throw new Error('Failed to initialize Bluetooth LE');\n      }\n\n      // Check if Bluetooth is available\n      const isAvailable = await BleClient.isEnabled();\n      if (!isAvailable) {\n        throw new Error('Bluetooth is not enabled on this device');\n      }\n\n      // Use the proper requestLEScan API for iOS\n      console.log('Starting BLE scan using requestLEScan...');\n      \n      // Set up scan options - look specifically for MicStreamer\n      const scanOptions = {\n        services: [AUDIO_SERVICE_UUID], // Filter by our audio service\n        name: 'MicStreamer', // Look specifically for MicStreamer device\n      };\n      \n      console.log('Scan options:', scanOptions);\n      console.log('Looking for MicStreamer device...');\n      \n      // Start scanning with callback\n      let foundDevice = null;\n      \n      await BleClient.requestLEScan(scanOptions, (result) => {\n        console.log('Scan result:', result);\n        \n        const device = result.device;\n        if (device && device.name === 'MicStreamer') {\n          foundDevice = device;\n          console.log('Found MicStreamer device:', device);\n          BleClient.stopLEScan();\n        }\n      });\n      \n      // Wait for device to be found\n      const scanResult = await new Promise((resolve, reject) => {\n        const timeout = setTimeout(() => {\n          BleClient.stopLEScan();\n          reject(new Error('No MicStreamer device found within 10 seconds. Make sure your XIAO board is powered on and advertising as \"MicStreamer\".'));\n        }, 10000);\n\n        // Check every 500ms if device was found\n        const checkInterval = setInterval(() => {\n          if (foundDevice) {\n            clearTimeout(timeout);\n            clearInterval(checkInterval);\n            resolve(foundDevice);\n          }\n        }, 500);\n      });\n\n      console.log('Found XIAO device:', scanResult);\n      setDevice(scanResult);\n      return scanResult;\n    } catch (err) {\n      console.error('Scan error:', err);\n      setError(err.message);\n      return null;\n    }\n  }, [onConnectionChange]);\n\n  const connectToDevice = useCallback(async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n\n      let targetDevice = device;\n      if (!targetDevice) {\n        targetDevice = await scanForDevices();\n        if (!targetDevice) {\n          return;\n        }\n      }\n\n      console.log('Connecting to device...');\n      await BleClient.connect(targetDevice.deviceId);\n      console.log('Connected to device');\n\n      // Discover services\n      const services = await BleClient.getServices(targetDevice.deviceId);\n      console.log('Got services:', services);\n\n      // Find the audio service\n      const audioService = services.find(s => s.uuid === AUDIO_SERVICE_UUID);\n      if (!audioService) {\n        throw new Error('Audio service not found');\n      }\n\n      // Get characteristics for the audio service\n      const characteristics = await BleClient.getCharacteristics(targetDevice.deviceId, audioService.uuid);\n      console.log('Got characteristics:', characteristics);\n\n      // Find the audio characteristic\n      const audioCharacteristic = characteristics.find(c => c.uuid === AUDIO_CHAR_UUID);\n      if (!audioCharacteristic) {\n        throw new Error('Audio characteristic not found');\n      }\n\n      // Start notifications\n      await BleClient.startNotifications(targetDevice.deviceId, audioService.uuid, audioCharacteristic.uuid);\n      console.log('Started notifications');\n\n      // Store device info for later use\n      setDevice({ ...targetDevice, audioService, audioCharacteristic });\n      \n      // Store the stream info for audio streaming\n      const audioStream = {\n        deviceId: targetDevice.deviceId,\n        serviceId: audioService.uuid,\n        characteristicId: audioCharacteristic.uuid,\n        device: targetDevice\n      };\n      \n      // Handle incoming audio data\n      BleClient.addListener('characteristicValueChanged', (result) => {\n        if (result.deviceId === targetDevice.deviceId && \n            result.characteristicId === audioCharacteristic.uuid) {\n          const data = result.value;\n          const audioData = new Int16Array(data);\n          \n          // Debug: Log first few packets to see what we're getting\n          if (Math.random() < 0.01) { // 1% chance to log\n            console.log(`🎤 XIAO MIC (BLE): received ${audioData.length} samples, first sample: ${audioData[0]}`);\n            console.log(`   📡 Source: XIAO Board microphone via BLE`);\n            console.log(`   🚫 NOT using laptop microphone`);\n          }\n          \n          // Pass audio data and stream info to parent component\n          if (onAudioData) {\n            onAudioData(audioData, audioStream);\n          }\n        }\n      });\n\n      setIsConnected(true);\n      onConnectionChange(true);\n      setError(null);\n\n    } catch (err) {\n      console.error('Connection error:', err);\n      setError(err.message);\n      setIsConnected(false);\n      onConnectionChange(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  }, [device, onConnectionChange, onAudioData, scanForDevices]);\n\n  const disconnectDevice = useCallback(async () => {\n    try {\n      if (device && device.deviceId) {\n        await BleClient.disconnect(device.deviceId);\n      }\n      setIsConnected(false);\n      setDevice(null);\n      onConnectionChange(false);\n      setError(null);\n    } catch (err) {\n      console.error('Disconnect error:', err);\n      setError(err.message);\n    }\n  }, [device, onConnectionChange]);\n\n  return (\n    <Container>\n      <Title>🔗 XIAO Board Connection</Title>\n      \n      <Status connected={isConnected}>\n        {isConnected ? (\n          <>\n            <BluetoothConnected size={20} />\n            Connected to {device?.name || 'XIAO Board'}\n          </>\n        ) : (\n          <>\n            <Bluetooth size={20} />\n            Not Connected\n          </>\n        )}\n      </Status>\n\n      {error && (\n        <div style={{ \n          color: '#e74c3c', \n          margin: '1rem 0', \n          padding: '1rem', \n          background: '#fdf2f2', \n          borderRadius: '8px',\n          fontSize: '0.9rem'\n        }}>\n          Error: {error}\n        </div>\n      )}\n\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n        {!isConnected ? (\n          <Button \n            onClick={connectToDevice} \n            disabled={isConnecting}\n          >\n            {isConnecting ? (\n              <>\n                <Wifi size={20} />\n                Connecting...\n              </>\n            ) : (\n              <>\n                <Bluetooth size={20} />\n                Connect to XIAO Board\n              </>\n            )}\n          </Button>\n        ) : (\n          <Button \n            onClick={disconnectDevice}\n            connected={true}\n          >\n            <WifiOff size={20} />\n            Disconnect\n          </Button>\n        )}\n      </div>\n\n      {device && (\n        <DeviceInfo>\n          <strong>Device Info:</strong><br />\n          Name: {device.name || 'Unknown'}<br />\n          ID: {device.deviceId}<br />\n          Connected: {isConnected ? 'Yes' : 'No'}\n        </DeviceInfo>\n      )}\n    </Container>\n  );\n};\n\nexport default BLEConnection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}